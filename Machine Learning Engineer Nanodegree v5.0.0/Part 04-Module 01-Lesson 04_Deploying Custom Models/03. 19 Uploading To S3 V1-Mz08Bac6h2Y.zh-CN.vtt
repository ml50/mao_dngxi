WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.140
在训练和部署模型之前

00:00:02.140 --> 00:00:04.769
我们需要将训练数据上传到 S3

00:00:04.769 --> 00:00:06.719
在上个视频中 我请你创建了一个 csv 文件

00:00:06.719 --> 00:00:10.109
其中包含训练特征和标签

00:00:10.109 --> 00:00:13.334
第一列是训练标签

00:00:13.335 --> 00:00:17.219
创建包含特征 x 和标签 y 的 csv 文件

00:00:17.219 --> 00:00:18.989
用几行代码就能搞定

00:00:18.989 --> 00:00:24.449
首先是用 pd.concat 将标签与特征合并到一起

00:00:24.449 --> 00:00:27.149
将 axis 设为 1

00:00:27.149 --> 00:00:30.539
表示沿着列维度合并特征和标签

00:00:30.539 --> 00:00:34.609
然后将合并后的 DataFrame 变成 csv 文件

00:00:34.609 --> 00:00:37.829
并传入该文件的存储路径

00:00:37.829 --> 00:00:41.344
指定不需要任何标题或索引

00:00:41.344 --> 00:00:44.104
这样的话 CSV 文件中

00:00:44.104 --> 00:00:45.574
就不包含任何多余信息

00:00:45.575 --> 00:00:46.790
例如列名或行名

00:00:46.789 --> 00:00:48.664
仅包含原始数据

00:00:48.664 --> 00:00:50.119
运行此单元格

00:00:50.119 --> 00:00:52.074
然后在下个单元格中测试

00:00:52.075 --> 00:00:57.440
应该看到在我指定的数据目录下创建了 train.csv 文件

00:00:57.439 --> 00:01:00.544
下一步是将数据上传到 S3

00:01:00.545 --> 00:01:03.399
我可以调用 session.upload_data

00:01:03.399 --> 00:01:05.719
然后传入数据在本地的存储位置

00:01:05.719 --> 00:01:09.500
以及要存储在 S3 存储桶中的哪个位置

00:01:09.500 --> 00:01:12.939
指定一个不同的 S3 prefix

00:01:12.939 --> 00:01:14.829
输出该路径

00:01:14.829 --> 00:01:19.489
这就是在 S3 中的位置 这是存储桶名称 这是指定的 prefix

00:01:19.489 --> 00:01:21.064
再检查一遍

00:01:21.064 --> 00:01:24.950
遍历 S3 存储桶中的对象并输出内容

00:01:24.950 --> 00:01:28.435
这是在 S3 中指定的 prefix

00:01:28.435 --> 00:01:31.234
然后是我的 train.csv 文件

00:01:31.234 --> 00:01:34.069
还要注意 我在每节课之后

00:01:34.069 --> 00:01:36.979
都手动转到 S3 并清空存储桶

00:01:36.980 --> 00:01:40.760
避免积累多个大型模型文件

00:01:40.760 --> 00:01:43.175
所以如果这里输出多个文件

00:01:43.174 --> 00:01:45.965
那么你可能需要清空 S3 存储桶了

00:01:45.965 --> 00:01:50.465
Ok我们已经将数据上传到 S3，estimator 可以使用这些数据训练模型

00:01:50.465 --> 00:01:55.560
下面将学习如何构建一个自定义 PyTorch estimator

