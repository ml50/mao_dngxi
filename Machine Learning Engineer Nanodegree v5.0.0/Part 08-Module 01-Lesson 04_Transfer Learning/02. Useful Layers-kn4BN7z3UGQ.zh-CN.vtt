WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.935
我们以 VGG 网络为例

00:00:02.935 --> 00:00:06.300
我们现在要解决的问题是

00:00:06.300 --> 00:00:10.220
如何将这个能分类 1000 种 ImageNet 图像的已训练 CNN 应用到新的任务上

00:00:10.220 --> 00:00:13.395
如果我想分类不同类型的花朵呢？

00:00:13.395 --> 00:00:14.950
例如太阳花与雏菊

00:00:14.950 --> 00:00:16.560
玫瑰等

00:00:16.560 --> 00:00:18.930
虽然 VGG 学会区分

00:00:18.930 --> 00:00:22.005
ImageNet 中的一千种不同类别

00:00:22.005 --> 00:00:24.155
但是大多数类别是动物

00:00:24.155 --> 00:00:26.810
水果 蔬菜或日常物品

00:00:26.810 --> 00:00:30.810
VGG 是否训练每个卷积层学习提取

00:00:30.810 --> 00:00:35.185
关于区分这些不同对象的形状和颜色信息？

00:00:35.185 --> 00:00:38.160
实际上 我们知道已训练 CNN 中的卷积滤波器

00:00:38.160 --> 00:00:41.320
按照某种层级排列

00:00:41.320 --> 00:00:45.860
第一层级中的滤波器通常会检测边缘或色块

00:00:45.860 --> 00:00:49.595
第二层可能会检测圆圈 条纹和长方形

00:00:49.595 --> 00:00:52.280
这些依然是很通用的特征

00:00:52.280 --> 00:00:55.565
有助于分析几乎任何数据集中的任何图像

00:00:55.565 --> 00:00:59.285
最终卷积层中的滤波器更加具体

00:00:59.285 --> 00:01:01.300
如果训练数据集中有小鸟

00:01:01.300 --> 00:01:03.275
那么就有检测小鸟的滤波器

00:01:03.275 --> 00:01:05.010
如果有汽车或自行车

00:01:05.010 --> 00:01:07.555
那么就有检测轮子的滤波器 等等

00:01:07.555 --> 00:01:11.360
我们发现 删除特定于训练数据集的最后层级

00:01:11.360 --> 00:01:15.425
并保留前面的层级很有用

00:01:15.425 --> 00:01:17.870
这样的话 你可以使用

00:01:17.870 --> 00:01:20.150
VGG 等预训练网络中的卷积层和池化层

00:01:20.150 --> 00:01:23.180
作为特征提取器

00:01:23.180 --> 00:01:26.660
它们能够识别花朵图像数据集中的形状和颜色特征

00:01:26.660 --> 00:01:30.425
然后 使图像经过这个预训练的特征提取器后

00:01:30.425 --> 00:01:33.530
我们可以在最后添加一两个线性层级

00:01:33.530 --> 00:01:35.840
作为最终分类器

00:01:35.840 --> 00:01:39.650
最终层级会接受图像中的特征

00:01:39.650 --> 00:01:43.520
我们只训练最终层级并针对新任务自定义此网络

00:01:43.520 --> 00:01:46.790
即使你要处理的花朵图像数据库

00:01:46.790 --> 00:01:50.685
与 ImageNet 类别没有重叠部分

00:01:50.685 --> 00:01:54.110
我们依然能利用预训练 CNN 中的经验

00:01:54.110 --> 00:01:56.350
这就是一种迁移学习技巧

00:01:56.350 --> 00:01:59.960
但是你的方法取决于你的数据集的大小

00:01:59.960 --> 00:02:04.100
以及它与 ImageNet 数据库之间的相似性

00:02:04.100 --> 00:02:05.930
例如 如果你的数据集相对较小

00:02:05.930 --> 00:02:09.200
并且具有和在 ImageNet 数据库中发现的特征

00:02:09.200 --> 00:02:11.480
相似的独特形状特征

00:02:11.480 --> 00:02:15.420
那么添加最终可训练分类器层级效果将不错

00:02:15.420 --> 00:02:18.660
如果你的数据集很大 并且与 ImageNet 不一样

00:02:18.660 --> 00:02:20.285
你可以采用其他方法

00:02:20.285 --> 00:02:24.160
我们再介绍一种迁移学习方法 然后再实现代码

