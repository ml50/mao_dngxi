WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.245
When I was using CSV files in the web app,

00:00:03.245 --> 00:00:05.695
I downloaded them from this website.

00:00:05.695 --> 00:00:09.030
I would choose an indicator that interested me.

00:00:09.029 --> 00:00:14.129
Click on it and then go here to the CSV file and download it.

00:00:14.130 --> 00:00:21.100
However, there's another way to access the World Bank data via the World Bank API.

00:00:21.100 --> 00:00:28.710
If I go to a search engine and I put in World Bank data API,

00:00:28.710 --> 00:00:32.134
I go here to API documentation.

00:00:32.134 --> 00:00:37.559
So, in general, to find an API documentation,

00:00:37.560 --> 00:00:39.655
it's best to look for it on the web.

00:00:39.655 --> 00:00:45.024
I'm going to click here where it says "API: Basic Call Structure."

00:00:45.024 --> 00:00:48.204
Essentially, in order to learn to use an API,

00:00:48.204 --> 00:00:50.405
you need to read its documentation.

00:00:50.405 --> 00:00:53.420
If you haven't seen this term REST before,

00:00:53.420 --> 00:01:00.215
it refers to a software architecture for the web called Representational State Transfer.

00:01:00.215 --> 00:01:04.070
I'll put some links about REST architecture below.

00:01:04.069 --> 00:01:07.529
Most modern APIs use this type of architecture.

00:01:07.530 --> 00:01:08.879
If you scroll down,

00:01:08.879 --> 00:01:12.314
you'll see there are a lot of examples.

00:01:12.314 --> 00:01:17.299
I'm going to paste these examples in a web browser and just see what happens.

00:01:17.299 --> 00:01:19.774
So, it looks like this is returning

00:01:19.775 --> 00:01:24.925
country information for countries with income level LIC,

00:01:24.924 --> 00:01:28.575
which I assume stands for Low Income Countries.

00:01:28.575 --> 00:01:32.120
This is an example of an XML response.

00:01:32.120 --> 00:01:37.400
So, by default it looks like the data gets returned in XML format.

00:01:37.400 --> 00:01:40.335
Going back to the API documentation,

00:01:40.334 --> 00:01:43.429
you can see here some of the options that the API has

00:01:43.430 --> 00:01:47.285
and how to format these URLs to make your query.

00:01:47.284 --> 00:01:50.575
For example, here it shows you can filter by date,

00:01:50.575 --> 00:01:56.469
you can change the format of the response to get JSON instead of XML.

00:01:56.469 --> 00:01:59.304
So, going back here to the query,

00:01:59.305 --> 00:02:01.200
for example, I can say,

00:02:01.200 --> 00:02:06.079
format equals JSON and this is the same information from

00:02:06.079 --> 00:02:08.419
before but it's just in a different format and I

00:02:08.419 --> 00:02:11.049
personally think that JSON is easier to navigate.

00:02:11.050 --> 00:02:14.015
So, I would stick with JSON instead of XML.

00:02:14.014 --> 00:02:18.359
Next over here, I'm going to click on "API: Indicator

00:02:18.360 --> 00:02:22.900
Queries" because the indicator data was what I was using for my web app.

00:02:22.900 --> 00:02:26.480
But now, instead of downloading individual CSV files,

00:02:26.479 --> 00:02:29.914
I can pull the data directly from the World Bank API.

00:02:29.914 --> 00:02:33.370
I'm going to scroll down and look at some of these examples.

00:02:33.370 --> 00:02:35.000
So, here it says,

00:02:35.000 --> 00:02:38.775
"Request format", and it gives you this example here.

00:02:38.775 --> 00:02:42.110
If you put in this URL,

00:02:42.110 --> 00:02:45.510
it's going to return all of

00:02:45.509 --> 00:02:49.959
the indicators that the World Bank has with information about all of them.

00:02:49.960 --> 00:02:54.950
In fact, this is actually only 50 of them because I know from reading

00:02:54.949 --> 00:03:00.569
the API documentation that it only gives 50 results at a time which you can see up here,

00:03:00.569 --> 00:03:02.525
per page equals 50.

00:03:02.525 --> 00:03:11.060
So, scrolling down, here is an example of getting GDP data for Brazil.

00:03:11.060 --> 00:03:14.479
So, I'm going to copy that and I'm going to

00:03:14.479 --> 00:03:18.310
paste it here and see what the results are, hitting "Enter".

00:03:18.310 --> 00:03:23.060
Okay. So this gives me data about GDP in Brazil for

00:03:23.060 --> 00:03:28.349
various years going all the way back to 1968.

00:03:28.349 --> 00:03:30.949
So, I've already read the documentation.

00:03:30.949 --> 00:03:35.299
So I know that you can start adding options to this query like adding

00:03:35.300 --> 00:03:40.245
more countries or showing more results per page or filtering by year.

00:03:40.245 --> 00:03:42.215
So, let's do some of that.

00:03:42.215 --> 00:03:46.659
For example, I can add other countries to this query, like,

00:03:46.659 --> 00:03:48.650
say the US and

00:03:48.650 --> 00:03:53.265
China and I know how to format this because I've read it in the documentation.

00:03:53.264 --> 00:03:57.379
I hit "Enter" and if I scroll down, well,

00:03:57.379 --> 00:04:00.949
it looks like we certainly have Brazil but that's because like I said before,

00:04:00.949 --> 00:04:03.514
it'll only give you 50 results at a time.

00:04:03.514 --> 00:04:06.299
So, to get more results,

00:04:06.300 --> 00:04:10.040
I have to tell it with a variable and

00:04:10.039 --> 00:04:15.650
say per page and increase the amount of results per page.

00:04:15.650 --> 00:04:21.194
So, now I have 500 results per page instead of 50 and if I scroll down,

00:04:21.194 --> 00:04:26.995
we'll see that we've also got China here and we've got the United States.

00:04:26.995 --> 00:04:31.740
So, let's say I also want to return this in JSON format.

00:04:31.740 --> 00:04:36.259
So, I can say format equals JSON and this is the same data.

00:04:36.259 --> 00:04:38.469
It's just in a different format that,

00:04:38.470 --> 00:04:39.780
like I said, in my opinion,

00:04:39.779 --> 00:04:41.264
is easier to navigate.

00:04:41.264 --> 00:04:45.079
I can filter by date as well and just get data from, say,

00:04:45.079 --> 00:04:49.859
1990-2015 and so here are all of our results.

00:04:49.860 --> 00:04:54.665
It might seem like I magically know how to do all of this but in reality,

00:04:54.665 --> 00:04:57.350
I've been reading the World Bank documentation to

00:04:57.350 --> 00:05:00.675
prepare this course and looking at a bunch of examples.

00:05:00.675 --> 00:05:04.129
As an example, how do I know what the country names are?

00:05:04.129 --> 00:05:07.310
Well, I've read in the documentation that the country names are using

00:05:07.310 --> 00:05:10.370
the two-character ISO codes which

00:05:10.370 --> 00:05:14.939
is an international standard for abbreviating country names.

00:05:14.939 --> 00:05:18.555
There are a couple of caveats I want to mention.

00:05:18.555 --> 00:05:23.900
First, this API does not require authentication or in other words,

00:05:23.899 --> 00:05:25.629
it doesn't require a username,

00:05:25.629 --> 00:05:28.670
password or any other identification.

00:05:28.670 --> 00:05:34.580
That means I can directly paste a URL into the browser and get the results back.

00:05:34.579 --> 00:05:38.269
However, that is not the case with all APIs.

00:05:38.269 --> 00:05:41.549
Many APIs require some authentication.

00:05:41.550 --> 00:05:45.910
So, you need to send an API request programmatically, like,

00:05:45.910 --> 00:05:49.640
with Python Code including a message that includes

00:05:49.639 --> 00:05:55.125
your credentials and API's documentation should ideally tell you how to do that.

00:05:55.125 --> 00:05:59.254
Next, you're going to practice making calls to the World Bank API

00:05:59.254 --> 00:06:04.284
using Python and then navigate the results that you get back.

00:06:04.285 --> 00:06:08.270
This will set you up for using an API in your web app.

