WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.245
之前在 Web 应用中使用 CSV 文件时

00:00:03.245 --> 00:00:05.695
是在这个网站下载的

00:00:05.695 --> 00:00:09.030
选择一个自己感兴趣的指标

00:00:09.029 --> 00:00:14.129
点击该指标 然后到这边选择 CSV 文件并下载

00:00:14.130 --> 00:00:21.100
不过 还有另一种访问世界银行数据的方法 — 世界银行 API

00:00:21.100 --> 00:00:28.710
如果使用搜索引擎 输入 world bank data api

00:00:28.710 --> 00:00:32.134
可以在这里查看 API 文档

00:00:32.134 --> 00:00:37.559
通常来说 要查找某个 API 或 API 文档

00:00:37.560 --> 00:00:39.655
最好在网络上搜索

00:00:39.655 --> 00:00:45.024
点击这里的 API: Basic Call Structure

00:00:45.024 --> 00:00:48.204
基本上要学会使用 API

00:00:48.204 --> 00:00:50.405
你都需要阅读其文档

00:00:50.405 --> 00:00:53.420
如果你之前没有看到过这个术语 REST

00:00:53.420 --> 00:01:00.215
它指的是一种软件架构 全称 Representational State Transfer (表现层状态转换)

00:01:00.215 --> 00:01:04.070
我会在视频下方给出一些有关 REST 架构的链接

00:01:04.069 --> 00:01:07.529
大部分现代 API 都使用这种类型的架构

00:01:07.530 --> 00:01:08.879
向下滚动

00:01:08.879 --> 00:01:12.314
你会看到很多示例

00:01:12.314 --> 00:01:17.299
我将这些示例粘贴到浏览器中 看看会发生什么

00:01:17.299 --> 00:01:19.774
看起来这返回了

00:01:19.775 --> 00:01:24.925
收入水平为 LIC 的国家信息

00:01:24.924 --> 00:01:28.575
LIC 应该是 Low Income Countries (低收入国家) 的缩写

00:01:28.575 --> 00:01:32.120
这是一个 XML 响应的示例

00:01:32.120 --> 00:01:37.400
看起来 默认情况下数据是以 XML 格式返回的

00:01:37.400 --> 00:01:40.335
回到 API 文档

00:01:40.334 --> 00:01:43.429
你可以在此处看到 API 的一些选项

00:01:43.430 --> 00:01:47.285
以及如何格式化这些 URL 来进行查询

00:01:47.284 --> 00:01:50.575
比如 这里显示你可以按日期进行筛选

00:01:50.575 --> 00:01:56.469
可以修改响应的格式 获取 JSON 而不是 XML

00:01:56.469 --> 00:01:59.304
回到这里查询

00:01:59.305 --> 00:02:01.200
我可以写

00:02:01.200 --> 00:02:06.079
format=json 这是与之前相同的信息

00:02:06.079 --> 00:02:08.419
只是格式不同

00:02:08.419 --> 00:02:11.049
个人认为 JSON 更易于浏览

00:02:11.050 --> 00:02:14.015
因此我会坚持使用 JSON 而不是 XML

00:02:14.014 --> 00:02:18.359
接下来 我要点击 API: Indicator Quaries

00:02:18.360 --> 00:02:22.900
因为指标数据就是我的应用中使用的数据

00:02:22.900 --> 00:02:26.480
现在 不用再下载单个 CSV 文件

00:02:26.479 --> 00:02:29.914
我可以直接从世界银行 API 中提取数据

00:02:29.914 --> 00:02:33.370
向下滚动 查看一些示例

00:02:33.370 --> 00:02:35.000
这里写着

00:02:35.000 --> 00:02:38.775
请求格式 并在此处提供了这个示例

00:02:38.775 --> 00:02:42.110
如果输入这个 url

00:02:42.110 --> 00:02:45.510
将返回

00:02:45.509 --> 00:02:49.959
世界银行拥有的所有指标 以及这些指标的信息

00:02:49.960 --> 00:02:54.950
这实际上只显示了其中的 50 个 通过阅读文档

00:02:54.949 --> 00:03:00.569
我知道 API 一次只能给出 50 个结果 你可以在这里看到

00:03:00.569 --> 00:03:02.525
per_page="50"

00:03:02.525 --> 00:03:11.060
向下滚动 这是获取巴西 GDP 数据的示例

00:03:11.060 --> 00:03:14.479
复制并将其粘贴到此处查看结果 点击回车

00:03:14.479 --> 00:03:18.310
复制并将其粘贴到此处查看结果 点击回车

00:03:18.310 --> 00:03:23.060
好的 这给出了巴西不同年份 GDP 的数据

00:03:23.060 --> 00:03:28.349
一直追溯到 1968 年

00:03:28.349 --> 00:03:30.949
我已经阅读了文档

00:03:30.949 --> 00:03:35.299
我知道你已经可以开始向查询添加选项了

00:03:35.300 --> 00:03:40.245
比如更多国家 每页显示更多结果 或按年份筛选

00:03:40.245 --> 00:03:42.215
我们来实际查询一下

00:03:42.215 --> 00:03:46.659
举个例子 我可以将其他国家添加到该查询中

00:03:46.659 --> 00:03:48.650
比如美国和中国

00:03:48.650 --> 00:03:53.265
我知道如何设置格式 因为我已经阅读了文档

00:03:53.264 --> 00:03:57.379
按下回车 如果我向下滚动

00:03:57.379 --> 00:04:00.949
看起来仍然只有巴西的数据 但是正如我之前所说

00:04:00.949 --> 00:04:03.514
因为一次只会给 50 个结果

00:04:03.514 --> 00:04:06.299
要获得更多结果

00:04:06.300 --> 00:04:10.040
我必须用一个变量进行设置

00:04:10.039 --> 00:04:15.650
设置 per_page 每页的结果数量

00:04:15.650 --> 00:04:21.194
现在每页有 500 个结果 而不是 50 个 向下滚动

00:04:21.194 --> 00:04:26.995
我们会看到有中国 还有美国

00:04:26.995 --> 00:04:31.740
假设我还想以 JSON 格式返回这些信息

00:04:31.740 --> 00:04:36.259
我可以设置 format=json 这是相同的数据

00:04:36.259 --> 00:04:38.469
只是格式不同

00:04:38.470 --> 00:04:39.780
就像我之前所说的

00:04:39.779 --> 00:04:41.264
更容易浏览

00:04:41.264 --> 00:04:45.079
我也可以按日期筛选 比如 1990 到 2015 这就是全部的结果

00:04:45.079 --> 00:04:49.859
我也可以按日期筛选 比如 1990 到 2015 这就是全部的结果

00:04:49.860 --> 00:04:54.665
看来很神奇 好像我都知道该怎么做 但实际上

00:04:54.665 --> 00:04:57.350
准备本课程时 我一直在阅读世界银行的文档

00:04:57.350 --> 00:05:00.675
并且查看了大量的示例

00:05:00.675 --> 00:05:04.129
比如 我怎么知道国家名字代号?

00:05:04.129 --> 00:05:07.310
我在文档中读到 国名使用的是

00:05:07.310 --> 00:05:10.370
两个字符的 ISO 代码

00:05:10.370 --> 00:05:14.939
是缩写国家名称的一种国际标准

00:05:14.939 --> 00:05:18.555
有几个注意事项

00:05:18.555 --> 00:05:23.900
首先 此 API 不需要身份验证

00:05:23.899 --> 00:05:25.629
也就是说不需要用户名、密码或其他任何标识

00:05:25.629 --> 00:05:28.670
也就是说不需要用户名、密码或其他任何标识

00:05:28.670 --> 00:05:34.580
这意味着 我可以直接将 URL 粘贴到浏览器中返回结果

00:05:34.579 --> 00:05:38.269
但是 并非所有 API 都是这样

00:05:38.269 --> 00:05:41.549
很多 API 都需要身份验证

00:05:41.550 --> 00:05:45.910
因此 你需要以编程方式发送 API 请求

00:05:45.910 --> 00:05:49.640
比如使用 Python 代码 其中包含你的凭证信息

00:05:49.639 --> 00:05:55.125
API 文档理论上都会告诉你如何执行此操作

00:05:55.125 --> 00:05:59.254
接下来 你将练习使用 Python 调用世界银行 API

00:05:59.254 --> 00:06:04.284
然后浏览返回的结果

00:06:04.285 --> 00:06:08.270
完成该练习后 你就能够在自己的应用中使用 API 了

