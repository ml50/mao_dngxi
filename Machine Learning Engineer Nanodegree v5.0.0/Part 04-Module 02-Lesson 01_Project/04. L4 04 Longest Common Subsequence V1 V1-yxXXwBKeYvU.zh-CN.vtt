WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.060
在文本分类任务中

00:00:03.060 --> 00:00:06.314
通常有必要在最终分类模型中包含多个特征

00:00:06.315 --> 00:00:10.574
包含系数只是衡量文本相似性的一种方式

00:00:10.574 --> 00:00:15.390
在此项目中 你需要计算原文和答案之间的

00:00:15.390 --> 00:00:17.295
最长公共子序列 (LCS)

00:00:17.295 --> 00:00:20.490
给定两段文本：答案 A 和原文 S

00:00:20.489 --> 00:00:24.734
你的任务是计算字词的最长公共子序列

00:00:24.734 --> 00:00:29.640
即在两段文本中都出现的从左到右最长字词序列

00:00:29.640 --> 00:00:33.299
注意 字词不需要完全连续

00:00:33.299 --> 00:00:35.265
只需从左到右即可

00:00:35.265 --> 00:00:37.994
假设有两个句子A：

00:00:37.994 --> 00:00:42.074
“machine learning is all about finding patterns in data and forming predictions.”

00:00:42.075 --> 00:00:46.520
S：“deep learning uses neural networks to find patterns in data.”

00:00:46.520 --> 00:00:48.090
为了计算LCS

00:00:48.090 --> 00:00:51.035
我们可以逐个字词地查看每个句子

00:00:51.034 --> 00:00:54.375
第一个字词“machine”和“deep”不一样

00:00:54.375 --> 00:00:56.229
然后“learning”一样

00:00:56.229 --> 00:00:58.129
然后字词又不一样了

00:00:58.130 --> 00:01:03.005
继续从左到右地查看这两句话 直到下个公共字词

00:01:03.005 --> 00:01:05.844
即字词“patterns in data”

00:01:05.844 --> 00:01:08.299
这时候已经到了原文的末尾 所以可以停止比较了

00:01:08.299 --> 00:01:11.914
LCS 共 4 个字词

00:01:11.915 --> 00:01:14.240
还有一个归一化步骤

00:01:14.239 --> 00:01:17.390
除以答案的长度

00:01:17.390 --> 00:01:18.844
答案有 12 个字词

00:01:18.844 --> 00:01:24.090
最终值为 4/12 约等于 0.333

00:01:24.090 --> 00:01:26.424
你可以递归地解决此问题

00:01:26.424 --> 00:01:31.209
记录在每个文本里的位置 并在找到公共字词后加一

00:01:31.209 --> 00:01:34.369
但是对于很长的文本来说

00:01:34.370 --> 00:01:36.605
递归方法很消耗计算资源

00:01:36.605 --> 00:01:39.650
建议采用动态规划法

00:01:39.650 --> 00:01:42.150
接下来我将介绍该方法

