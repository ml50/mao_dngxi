WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.779
根据特定指标优化模型称为模型优化

00:00:03.779 --> 00:00:07.890
SageMaker 提供了自动优化 LinearLearner 的各种方式

00:00:07.889 --> 00:00:12.089
在此示例中 假设银行要求我

00:00:12.089 --> 00:00:16.469
构建一个检测欺诈性交易的模型 并且准确率约为 85%

00:00:16.469 --> 00:00:18.644
我希望模型的真正例尽量高

00:00:18.644 --> 00:00:22.320
并且尽量减少假负例

00:00:22.320 --> 00:00:25.230
这种模型的召回率很高

00:00:25.230 --> 00:00:27.510
召回率等于真正例的数量

00:00:27.510 --> 00:00:30.045
除以真正例加上假负例的数量

00:00:30.045 --> 00:00:33.270
当假负例的数量为零时 召回率最高

00:00:33.270 --> 00:00:34.785
为了优化特定的指标

00:00:34.784 --> 00:00:37.079
LinearLearner 提供了超参数

00:00:37.079 --> 00:00:39.960
binary_classifier_model_selection_criteria

00:00:39.960 --> 00:00:43.370
它表示训练数据集的模型评估标准

00:00:43.369 --> 00:00:45.679
看看该参数的详细信息

00:00:45.679 --> 00:00:48.619
默认情况下 它设为准确率

00:00:48.619 --> 00:00:50.479
但是我想改成召回率

00:00:50.479 --> 00:00:54.064
打开 LinearLearner 参考文档

00:00:54.064 --> 00:00:57.699
向下滚动 可以看到binary_classifier_model_selection_criteria

00:00:57.700 --> 00:01:00.135
我需要选择一个字符串 accuracy

00:01:00.134 --> 00:01:03.320
f1 f_beta 或多个其他目标

00:01:03.320 --> 00:01:06.575
我需要为召回率设置目标值

00:01:06.575 --> 00:01:10.549
所以将 model_selection_criteria 设为precision_at_target_recall

00:01:10.549 --> 00:01:13.039
并且为 target_recall 设定一个值

00:01:13.040 --> 00:01:14.975
在这里正常创建模型

00:01:14.974 --> 00:01:16.164
传入角色

00:01:16.165 --> 00:01:18.015
设定训练实例

00:01:18.015 --> 00:01:20.204
输出路径以及 sagemaker 会话

00:01:20.204 --> 00:01:24.254
我还将 model_selection_criteria 设为precision_at_target_recall

00:01:24.254 --> 00:01:27.314
并将 target_recall 的值设为 0.9

00:01:27.314 --> 00:01:30.245
我假设训练集的性能

00:01:30.245 --> 00:01:33.395
与测试集的性能相差在约 5% 之内

00:01:33.394 --> 00:01:35.854
所以召回率为 85% 的话

00:01:35.855 --> 00:01:38.165
我将设置更高的目标 即 90%

00:01:38.165 --> 00:01:40.505
接下来的步骤与之前的一样

00:01:40.504 --> 00:01:45.109
使用特殊格式的训练数据训练召回率模型并部署模型

00:01:45.109 --> 00:01:48.109
然后评估部署的预测端点“recall_predictor”

00:01:48.109 --> 00:01:50.944
并输出指标

00:01:50.944 --> 00:01:55.104
可以看出 现在的召回率高多了 并且精确率低多了

00:01:55.105 --> 00:02:00.034
我只将 10 个欺诈性交易分类错了

00:02:00.034 --> 00:02:03.289
但是将很多有效交易

00:02:03.290 --> 00:02:05.285
错误地分类成欺诈性交易

00:02:05.284 --> 00:02:09.469
我已经评估了此端点 下面删除 recall_predictor

00:02:09.469 --> 00:02:11.330
我们的模型经过优化后召回率更高

00:02:11.330 --> 00:02:14.900
目标是降低假负例的数量

00:02:14.900 --> 00:02:18.110
但之前我们讨论了类别不平衡性

00:02:18.110 --> 00:02:21.710
可能会导致模型倾向于将所有交易预测为有效交易

00:02:21.710 --> 00:02:24.305
导致假负例的数量更高

00:02:24.305 --> 00:02:26.060
所以这个模型可以进一步优化

00:02:26.060 --> 00:02:28.340
并考虑这种类别不平衡性

00:02:28.340 --> 00:02:31.495
接下来我们将讨论改进此模型的一种方式

00:02:31.495 --> 00:02:33.920
你的任务是训练并部署一个模型

00:02:33.919 --> 00:02:37.639
该模型既经过优化 又考虑了类别不平衡性

