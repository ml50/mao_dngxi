WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.620
我们加载了交易数据并将数据拆分为训练集和测试集

00:00:04.620 --> 00:00:07.650
下面开始定义我们要训练的模型

00:00:07.650 --> 00:00:11.220
在这道练习中 我们将使用 SageMaker 的 LinearLearner

00:00:11.220 --> 00:00:13.335
LinearLearner 主要有两个用途

00:00:13.335 --> 00:00:18.285
一个是完成回归任务 即用一条线拟合数据点

00:00:18.285 --> 00:00:22.560
你希望模型能根据某些数据点生成预测输出值

00:00:22.559 --> 00:00:26.919
例如根据平方尺寸预测房价

00:00:26.920 --> 00:00:29.945
第二个用途是执行二元分类

00:00:29.945 --> 00:00:34.640
LinearLearner 会学习一条能区分两类数据的直线

00:00:34.640 --> 00:00:36.890
它会输出一个标签

00:00:36.890 --> 00:00:39.469
数据点在这条线上方的类别标签为 1

00:00:39.469 --> 00:00:43.054
数据点在这条线上或下面的类别标签为 0

00:00:43.054 --> 00:00:45.079
这是一个简单的二维示例

00:00:45.079 --> 00:00:49.804
还可以将其看做平面或针对多个特征的多维直线

00:00:49.804 --> 00:00:53.719
对我们来说 我们会将 LinearLearner 当做二元分类器

00:00:53.719 --> 00:00:58.519
并用它预测两个交易类别 有效交易标签为 0 欺诈性交易标签为 1

00:00:58.520 --> 00:01:00.410
与任何机器学习方法一样

00:01:00.409 --> 00:01:02.599
我们首先将用现有训练数据训练 LinearLearner

00:01:02.600 --> 00:01:06.515
使其学习一条很好的分隔线

00:01:06.515 --> 00:01:11.394
然后将模型应用到新的测试数据上 看看泛化效果

00:01:11.394 --> 00:01:15.739
你可以像任何其他模型一样实例化 LinearLearner

00:01:15.739 --> 00:01:18.424
传入一些构造函数超参数 角色

00:01:18.424 --> 00:01:22.729
输出位置以及特定于模型的超参数

00:01:22.730 --> 00:01:24.170
对于下道练习

00:01:24.170 --> 00:01:26.989
我提供了 LinearLearner 参考文档的链接

00:01:26.989 --> 00:01:30.724
阅读该文档应该就足以创建一个 LinearLearner estimator 了

00:01:30.724 --> 00:01:32.089
打开该文档后

00:01:32.090 --> 00:01:35.165
你会发现有很多参数可以传入

00:01:35.165 --> 00:01:37.490
但我建议仅传入几个就行了

00:01:37.489 --> 00:01:39.890
例如角色 训练实例的类型

00:01:39.890 --> 00:01:43.325
并指定我们要使用二元分类器

00:01:43.325 --> 00:01:46.400
大多数参数都可以保留默认值

00:01:46.400 --> 00:01:47.719
完成这一步后

00:01:47.719 --> 00:01:50.390
请继续转换训练数据

00:01:50.390 --> 00:01:53.224
训练 estimator 甚至部署 estimator

00:01:53.224 --> 00:01:57.655
在下个视频中 我将介绍我是如何创建 LinearLearner 模型的

00:01:57.655 --> 00:01:59.000
之后 我们将学习

00:01:59.000 --> 00:02:03.959
几个特定的参数并一步步地改进此模型

