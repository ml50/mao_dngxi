WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.540
In this lesson, we'll look at using SageMaker

00:00:03.540 --> 00:00:06.884
for classification task including fraud detection.

00:00:06.884 --> 00:00:09.809
The case study that we'll look at is specific to

00:00:09.810 --> 00:00:13.065
credit cards and detecting fraudulent transactions.

00:00:13.064 --> 00:00:17.414
The skills you learn will be applicable to a variety of tasks.

00:00:17.414 --> 00:00:21.390
So first, what exactly is fraud detection,

00:00:21.390 --> 00:00:24.359
and how might we begin to approach this task?

00:00:24.359 --> 00:00:26.265
When I think of payments fraud,

00:00:26.265 --> 00:00:27.810
I think about someone finding

00:00:27.809 --> 00:00:33.030
my credit card information and using it to buy something for themselves.

00:00:33.030 --> 00:00:37.530
The way that my bank identifies something like this is by looking at

00:00:37.530 --> 00:00:43.155
my transaction and noting if something is atypical or outside my spending patterns.

00:00:43.155 --> 00:00:46.850
The challenge here is defining what exactly atypical means.

00:00:46.850 --> 00:00:48.425
Now, I live in New York,

00:00:48.424 --> 00:00:52.419
and transactions outside that area might stick out.

00:00:52.420 --> 00:00:54.120
But also travel a lot,

00:00:54.119 --> 00:00:56.629
so location is not the best indicator.

00:00:56.630 --> 00:00:59.900
If I've only bought groceries in the past few months,

00:00:59.899 --> 00:01:05.150
maybe it would be suspicious if I go out shopping for lots and lots and lots of clothing.

00:01:05.150 --> 00:01:09.484
But that depends on things like holidays and my motto.

00:01:09.484 --> 00:01:13.969
So you can see that fraud detection is a challenging problem.

00:01:13.969 --> 00:01:18.920
The task is really to identify the typical patterns found in valid transaction,

00:01:18.920 --> 00:01:23.344
and then flat transactions that are way outside of those patterns.

00:01:23.344 --> 00:01:27.829
Machine learning works well here because it's designed to find patterns.

00:01:27.829 --> 00:01:33.500
So we'll use an algorithm that looks at historical spending data,

00:01:33.500 --> 00:01:36.920
transactions that are labeled as valid or fraudulent,

00:01:36.920 --> 00:01:42.665
and sees if it can parse out patterns that effectively distinguish those two classes.

00:01:42.665 --> 00:01:46.609
If we imagine that we are in a bank-like setting,

00:01:46.609 --> 00:01:50.569
it would be important to make this algorithm scalable and easy to update,

00:01:50.569 --> 00:01:54.244
and that's where SageMaker interface becomes especially useful.

00:01:54.245 --> 00:02:00.480
Next, you'll get a chance to work with these data and code a solution of your own.

