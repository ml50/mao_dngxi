WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.595
下面说说我是如何定义 LinearLearner 的

00:00:02.595 --> 00:00:06.028
我从 SageMaker 导入了 LinearLearner estimator

00:00:06.028 --> 00:00:08.849
首先指定要将保存的模型属性

00:00:08.849 --> 00:00:12.419
存储到 S3 存储桶的哪个位置

00:00:12.419 --> 00:00:15.660
指定 prefix“creditcard”

00:00:15.660 --> 00:00:18.089
然后指定 S3 中的完整路径

00:00:18.089 --> 00:00:21.129
它会指向这个存储桶以及这个目录“creditcard”

00:00:21.129 --> 00:00:25.320
指定输出路径是一种很好的习惯

00:00:25.320 --> 00:00:27.660
因为这样有助于整理 S3 存储桶中的内容

00:00:27.660 --> 00:00:30.675
并且以后始终可以从已知位置访问保存的模型

00:00:30.675 --> 00:00:33.049
然后实例化一个 estimator 叫做 linear

00:00:33.049 --> 00:00:36.274
向 LinearLearner 传入参数

00:00:36.274 --> 00:00:39.890
这些是常规的 SageMaker 参数 包括角色

00:00:39.890 --> 00:00:43.359
SageMaker 会话以及刚刚定义的输出路径

00:00:43.359 --> 00:00:46.130
还设定了训练实例

00:00:46.130 --> 00:00:48.920
实例数量为 1 个 类型为 c4 xlarge

00:00:48.920 --> 00:00:50.480
对于这个 LinearLearner

00:00:50.479 --> 00:00:52.564
我需要指定预测器类型

00:00:52.564 --> 00:00:54.964
它可以告诉 estimator

00:00:54.965 --> 00:00:58.470
我需要二元分类器 而不是回归算法

00:00:58.469 --> 00:01:01.699
最后传入训练周期数

00:01:01.700 --> 00:01:06.560
周期数的默认值为 15

00:01:06.560 --> 00:01:11.540
表示算法遍历整个训练集的次数

00:01:11.540 --> 00:01:14.020
我的策略是先从默认值开始

00:01:14.019 --> 00:01:16.439
如果还需要训练的话

00:01:16.439 --> 00:01:20.594
我就增大周期数 如果损失下降很快

00:01:20.594 --> 00:01:22.685
则减小这个数字

00:01:22.685 --> 00:01:25.370
实例化 estimator 后

00:01:25.370 --> 00:01:27.800
下面使用训练数据训练 estimator

00:01:27.799 --> 00:01:29.659
与任何内置算法一样

00:01:29.659 --> 00:01:33.250
需要格式化 split 函数返回的训练数据

00:01:33.250 --> 00:01:37.730
首先转换成 NumPy 浮点数组 然后转换成 RecordSet 格式

00:01:37.730 --> 00:01:41.285
下个任务是格式化此数据并训练 estimator

00:01:41.284 --> 00:01:42.619
完成此任务后

00:01:42.620 --> 00:01:45.185
请继续阅读如何部署已训练模型的说明

00:01:45.185 --> 00:01:46.685
如果你想检查你的代码

00:01:46.685 --> 00:01:50.100
请观看下个解答视频

