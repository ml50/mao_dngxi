WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.400
在接下来的几个视频中

00:00:02.400 --> 00:00:05.970
我们将使用在上节课处理的情感分析迷你项目

00:00:05.970 --> 00:00:08.040
并创建一个使用该项目的简单网络应用

00:00:08.040 --> 00:00:11.190
我们要创建的网络应用看起来是这样的

00:00:11.190 --> 00:00:14.475
你可以在这里输入影评

00:00:14.475 --> 00:00:17.550
例如 这是一条负面影评

00:00:17.550 --> 00:00:20.760
点击提交后 模型会指出

00:00:20.760 --> 00:00:22.245
这是一条负面影评

00:00:22.245 --> 00:00:26.235
再举个例子 我们可以输入这样的正面影评

00:00:26.235 --> 00:00:30.480
点击提交 应用告诉我们

00:00:30.480 --> 00:00:32.340
模型认为这是正面影评

00:00:32.340 --> 00:00:34.530
我们需要像之前

00:00:34.530 --> 00:00:36.690
部署波士顿房价模型一样

00:00:36.690 --> 00:00:39.285
部署这个情感分析模型

00:00:39.285 --> 00:00:42.740
但是要解决几个问题

00:00:42.740 --> 00:00:45.515
首先 情感分析模型

00:00:45.515 --> 00:00:49.535
要求输入是用词袋表示的影评

00:00:49.535 --> 00:00:54.020
但是在这里 我们允许用户输入一段文字

00:00:54.020 --> 00:00:57.725
所以如何编码用户的输入 使模型能理解这些输入？

00:00:57.725 --> 00:01:00.440
另一个问题是安全性

00:01:00.440 --> 00:01:04.250
SageMaker 创建的端点只能被经过身份验证

00:01:04.250 --> 00:01:08.350
并且有权使用 SageMaker 端点的网络应用访问

00:01:08.350 --> 00:01:10.040
这对于简单的网络应用来说 似乎工作量有点大

00:01:10.040 --> 00:01:13.520
所以我们将自己创建一个端点

00:01:13.520 --> 00:01:16.145
该端点可以被任何人访问 没有限制

00:01:16.145 --> 00:01:19.595
这就需要使用其他 Amazon 服务

00:01:19.595 --> 00:01:23.870
我们将使用 Lambda 和 API Gateway

