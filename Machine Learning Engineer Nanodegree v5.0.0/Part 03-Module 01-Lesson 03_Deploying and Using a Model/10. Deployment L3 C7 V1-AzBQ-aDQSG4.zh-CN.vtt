WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.800
在上个视频中

00:00:01.800 --> 00:00:03.900
我们设置了一个 Lambda 函数

00:00:03.900 --> 00:00:05.775
并使其能够访问 SageMaker 端点

00:00:05.775 --> 00:00:09.285
然后测试该函数 确保它能够正常运行

00:00:09.285 --> 00:00:14.835
在本视频中 我们将创建一个能触发该 Lambda 函数的端点

00:00:14.835 --> 00:00:18.840
即创建一个网络应用能够使用的端点或接口

00:00:18.840 --> 00:00:23.370
从而向 Lambda 函数发送数据

00:00:23.370 --> 00:00:26.610
我们将使用 API Gateway

00:00:26.610 --> 00:00:31.170
切换到 Amazon 控制台 然后一直向下滚动到

00:00:31.170 --> 00:00:35.940
Networking &amp; Content Delivery 选择“API Gateway”

00:00:35.940 --> 00:00:38.340
通过 API Gateway 可以创建一个端点

00:00:38.340 --> 00:00:42.125
并使用该端点触发各种对象

00:00:42.125 --> 00:00:45.980
在此示例中 我们将用端点触发 Lambda 函数

00:00:45.980 --> 00:00:49.610
点击“Get Started” 然后点击“Okay”

00:00:49.610 --> 00:00:56.325
我们将创建一个新的 API 名称为 sentimentAnalysis

00:00:56.325 --> 00:00:58.320
然后点击“Create API”

00:00:58.320 --> 00:00:59.765
我们有了新的 API

00:00:59.765 --> 00:01:01.460
目前它不能执行任何操作

00:01:01.460 --> 00:01:03.160
我们添加一个操作

00:01:03.160 --> 00:01:04.910
点击“Actions”下拉菜单

00:01:04.910 --> 00:01:08.485
然后选择“Create Method”

00:01:08.485 --> 00:01:11.720
使用哪个方法呢？我们将使用 POST 方法

00:01:11.720 --> 00:01:16.579
这里需要对 HTTP 协议有所了解

00:01:16.579 --> 00:01:19.385
这已经超出了这门课程的范畴

00:01:19.385 --> 00:01:22.435
我们将创建一个 POST 操作

00:01:22.435 --> 00:01:24.105
选择“POST”后

00:01:24.105 --> 00:01:30.245
选中该复选框 系统为端点新建了一个 POST 操作

00:01:30.245 --> 00:01:32.010
我们想要什么样的交互？

00:01:32.010 --> 00:01:35.450
我们希望它能与 Lambda 函数交互

00:01:35.450 --> 00:01:40.080
此外 我们将选择“Use Lambda Proxy integration”

00:01:40.080 --> 00:01:46.220
这表示我们的 API 不会检查数据

00:01:46.220 --> 00:01:49.520
只是将接收的任何数据发送给 Lambda 函数

00:01:49.520 --> 00:01:51.960
然后将 Lambda 函数输出的内容

00:01:51.960 --> 00:01:55.185
返回给调用者

00:01:55.185 --> 00:01:57.480
使用哪个 Lambda 函数？

00:01:57.480 --> 00:02:01.015
使用之前创建的 sentiment_lambda_function 函数

00:02:01.015 --> 00:02:04.880
指定要与 Lambda 函数交互

00:02:04.880 --> 00:02:08.285
使用 Lambda Proxy integration

00:02:08.285 --> 00:02:12.530
并选择我们要使用的 Lambda 函数后 点击“Save”

00:02:12.530 --> 00:02:19.235
是的 我们想让 API 有权访问 sentiment_lambda_function

00:02:19.235 --> 00:02:23.725
我们创建了一个 API 并为其设定了操作

00:02:23.725 --> 00:02:26.165
现在需要部署该 API

00:02:26.165 --> 00:02:31.304
点击“Actions”下拉菜单 然后选择“Deploy API”

00:02:31.304 --> 00:02:33.100
我们需要设定部署阶段

00:02:33.100 --> 00:02:35.930
部署阶段是指

00:02:35.930 --> 00:02:38.990
部署 API 的不同环境

00:02:38.990 --> 00:02:42.335
例如 如果要在内部进行测试

00:02:42.335 --> 00:02:44.450
可以部署到测试阶段

00:02:44.450 --> 00:02:49.355
对我们来说 我们将部署到生产阶段

00:02:49.355 --> 00:02:53.510
点击该下拉菜单 然后添加新的阶段

00:02:53.510 --> 00:02:55.940
命名为“prod”

00:02:55.940 --> 00:02:59.470
然后点击“Deploy” 搞定

00:02:59.470 --> 00:03:01.360
API 已经部署了

00:03:01.360 --> 00:03:05.920
这是访问该 API 的 URL

00:03:05.920 --> 00:03:09.665
如果向此 URL 发送 POST 请求

00:03:09.665 --> 00:03:13.680
该请求的 body 将发送给 Lambda 函数

00:03:13.680 --> 00:03:17.810
Lambda 函数将返回模型的结果

00:03:17.810 --> 00:03:21.800
现在我们有了处理数据的 Lambda 函数

00:03:21.800 --> 00:03:24.710
以及进行预测的模型

00:03:24.710 --> 00:03:29.795
并且创建了能够访问它们的 API

00:03:29.795 --> 00:03:34.930
接下来 我们将使用新创建的 API 启动网络应用

