WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.800
Remember that in the last video,

00:00:01.800 --> 00:00:03.900
we set up a Lambda function,

00:00:03.899 --> 00:00:05.775
making sure to give it permission to access

00:00:05.775 --> 00:00:09.285
a SageMaker endpoint and then we tested it to make sure it was working.

00:00:09.285 --> 00:00:14.835
In this video, we're going to create an endpoint that triggers our Lambda function.

00:00:14.835 --> 00:00:18.839
That is, we're going to create an endpoint or an interface that

00:00:18.839 --> 00:00:23.370
our web app can use in order to send data to our Lambda function.

00:00:23.370 --> 00:00:26.609
To do that, we're going to use API Gateway.

00:00:26.609 --> 00:00:31.169
If we go back to the Amazon console and then scroll down all the way

00:00:31.170 --> 00:00:35.939
to Networking &amp; Content Delivery, select API Gateway.

00:00:35.939 --> 00:00:38.339
If your gateway lets you create

00:00:38.340 --> 00:00:42.125
an endpoint which you can use to trigger all sorts of things.

00:00:42.125 --> 00:00:45.979
For this example, we're going to use it to trigger a Lambda function.

00:00:45.979 --> 00:00:49.609
So, click on Get Started and then click on Okay.

00:00:49.609 --> 00:00:56.325
We would like to create a new API and our API's name is going to be sentimentAnalysis.

00:00:56.325 --> 00:00:58.320
Then we click on Create API.

00:00:58.320 --> 00:00:59.765
So, we have a new API.

00:00:59.765 --> 00:01:01.460
Currently it doesn't do anything.

00:01:01.460 --> 00:01:03.160
Let's add an action,

00:01:03.159 --> 00:01:04.909
which we can do by clicking on

00:01:04.909 --> 00:01:08.484
the Actions drop-down menu and then selecting Create Method.

00:01:08.484 --> 00:01:11.719
Which method? We are going to use a post method.

00:01:11.719 --> 00:01:16.578
Now this involves knowing a little bit about the HTTP protocol;

00:01:16.578 --> 00:01:19.384
however, that is a bit beyond the scope of this course.

00:01:19.385 --> 00:01:22.435
So, we want to create a post action.

00:01:22.435 --> 00:01:24.105
Once we've selected post,

00:01:24.105 --> 00:01:30.245
we click on the check mark and a new post action has been created for our endpoint.

00:01:30.245 --> 00:01:32.010
What kind of integration type would we like?

00:01:32.010 --> 00:01:35.450
Well, we would like it to integrate with a Lambda function.

00:01:35.450 --> 00:01:40.079
Furthermore, we would like to use Lambda Proxy integration.

00:01:40.079 --> 00:01:46.219
This means that our API is not going to do any sort of data checking whatsoever.

00:01:46.219 --> 00:01:49.519
It is just going to send whatever it receives to

00:01:49.519 --> 00:01:51.959
the Lambda function and then return back to

00:01:51.959 --> 00:01:55.184
the caller anything that the Lambda function spits out.

00:01:55.185 --> 00:01:57.480
Which Lambda function are we going to use?

00:01:57.480 --> 00:02:01.015
The one that we created earlier called sentiment Lambda function.

00:02:01.015 --> 00:02:04.879
Once we have made sure that we are integrating with Lambda function,

00:02:04.879 --> 00:02:08.284
made sure that we are using Lambda Proxy integration,

00:02:08.284 --> 00:02:12.530
and selected the Lambda function we want to use, click on "Save".

00:02:12.530 --> 00:02:19.235
Yes, we would like to add permission for our API to access our sentiment Lambda function.

00:02:19.235 --> 00:02:23.725
So, we've created an API and we've given that API something to do.

00:02:23.724 --> 00:02:26.164
Now we need to actually deploy it.

00:02:26.164 --> 00:02:31.304
Again, if we click on the "Actions" drop-down and select "Deploy API."

00:02:31.304 --> 00:02:33.099
We need to give it a deployment stage.

00:02:33.099 --> 00:02:35.930
Now this has something to do with the different types

00:02:35.930 --> 00:02:38.990
of environments you might need to deploy this API in.

00:02:38.990 --> 00:02:42.335
For example, if you just wanted to test something internally,

00:02:42.335 --> 00:02:44.450
you might deploy this to a test stage.

00:02:44.449 --> 00:02:49.354
For us, we're just going to call our deployment stage prod, for production.

00:02:49.354 --> 00:02:53.509
To do that, we select the drop-down menu and add a new stage.

00:02:53.509 --> 00:02:55.939
The name of that stage is going to be prod.

00:02:55.939 --> 00:02:59.469
Once we've done that, we can click on "Deploy" and that's it.

00:02:59.469 --> 00:03:01.359
Our API is now deployed.

00:03:01.360 --> 00:03:05.920
This is the URL that our API can be accessed at.

00:03:05.919 --> 00:03:09.664
So, if we send a post request to this URL,

00:03:09.664 --> 00:03:13.679
the body of that post request will get sent our Lambda function and

00:03:13.680 --> 00:03:17.810
our Lambda function will return to us whatever the results of our model is.

00:03:17.810 --> 00:03:21.800
So, now we have a Lambda function that does the data processing we need,

00:03:21.800 --> 00:03:24.710
we have a model that creates the prediction we need,

00:03:24.710 --> 00:03:29.795
and we've created an API that allows us to access all of those things.

00:03:29.794 --> 00:03:34.929
Next, we're going to launch the web app using our newly created API.

