WEBVTT
Kind: captions
Language: en

00:00:03.950 --> 00:00:07.589
Great work coding the Gaussian, class.

00:00:07.589 --> 00:00:10.529
The more you practice writing object-oriented code,

00:00:10.529 --> 00:00:12.369
the better you'll get at it.

00:00:12.369 --> 00:00:14.989
Thinking about Gaussian distributions,

00:00:14.990 --> 00:00:18.585
do you know what it means to add two Gaussian distributions together?

00:00:18.585 --> 00:00:21.010
The math is straightforward.

00:00:21.010 --> 00:00:26.645
Let's say you have a Gaussian distribution and another Gaussian distribution,

00:00:26.644 --> 00:00:29.219
you want to sum these together.

00:00:29.219 --> 00:00:32.149
To find the mean of this new distribution,

00:00:32.149 --> 00:00:36.195
you add the means of the individual Gaussian distributions together.

00:00:36.195 --> 00:00:38.804
To calculate the standard deviation,

00:00:38.804 --> 00:00:43.475
you take the square root of the sum of squares of the standard deviations.

00:00:43.475 --> 00:00:46.850
Mathematically, there's a clear definition of

00:00:46.850 --> 00:00:50.785
what it means to sum two Gaussian distributions.

00:00:50.784 --> 00:00:53.149
But what about in your code,

00:00:53.149 --> 00:00:55.909
if you instantiate a Gaussian object,

00:00:55.909 --> 00:00:58.549
and then instantiate another Gaussian object,

00:00:58.549 --> 00:01:04.215
can you type out Gaussian a plus Gaussian b and expect to get the correct result?

00:01:04.215 --> 00:01:10.145
No, Python doesn't have any idea how to add two Gaussian distributions together.

00:01:10.144 --> 00:01:13.489
This code is going to produce an error.

00:01:13.489 --> 00:01:16.059
What if I told you that there was a way to tell

00:01:16.060 --> 00:01:19.555
Python how to add two Gaussian distributions together.

00:01:19.555 --> 00:01:22.975
You could type Gaussian a plus Gaussian b,

00:01:22.974 --> 00:01:28.569
and then get a new Gaussian object containing the correct mean and standard deviation.

00:01:28.569 --> 00:01:32.559
That would be quite magical, wouldn't it?

00:01:32.560 --> 00:01:36.659
Well, Python has a feature called magic methods

00:01:36.659 --> 00:01:41.450
that are specifically for overriding default Python behavior.

00:01:41.450 --> 00:01:43.685
In the next part of the lesson,

00:01:43.685 --> 00:01:46.840
you'll practice writing magic methods

