WEBVTT
Kind: captions
Language: pt-BR

00:00:00.883 --> 00:00:04.540
MÉTODOS MÁGICOS

00:00:04.900 --> 00:00:07.796
Ótimo trabalho
na classe Gaussian.

00:00:07.830 --> 00:00:10.493
Quanto mais treinar
programação orientada a objetos,

00:00:10.527 --> 00:00:12.590
melhor vai ficar.

00:00:12.836 --> 00:00:15.037
Pensando nas distribuições
gaussianas,

00:00:15.071 --> 00:00:18.748
sabe o que significa somar
duas distribuições gaussianas?

00:00:18.782 --> 00:00:20.691
A matemática é simples.

00:00:21.596 --> 00:00:26.892
Digamos que você tenha
duas distribuições gaussianas

00:00:26.926 --> 00:00:29.715
e quer somá-las.

00:00:29.749 --> 00:00:32.250
Para encontrar a média
dessa nova distribuição,

00:00:32.284 --> 00:00:36.540
some as médias
das distribuições gaussianas.

00:00:36.574 --> 00:00:38.882
Para calcular o desvio padrão,

00:00:38.916 --> 00:00:40.395
faça a raiz quadrada

00:00:40.429 --> 00:00:43.771
da soma dos quadrados
dos desvios padrão.

00:00:43.805 --> 00:00:46.667
Matematicamente,
há uma definição clara

00:00:46.701 --> 00:00:50.844
do que significa somar
duas distribuições gaussianas.

00:00:51.340 --> 00:00:53.474
Mas e no código?

00:00:53.508 --> 00:00:55.954
Se instanciar
um objeto gaussiano

00:00:55.988 --> 00:00:58.546
e fizer o mesmo
com outro objeto gaussiano,

00:00:58.580 --> 00:01:04.442
pode digitar "gaus_a+gaus_b"
e esperar um resultado?

00:01:04.476 --> 00:01:10.388
Não, o Python não faz ideia
de como fazer essa soma.

00:01:10.422 --> 00:01:13.660
Esse código vai
produzir um erro.

00:01:13.694 --> 00:01:16.504
E se eu dissesse que temos como
ensinar o Python

00:01:16.538 --> 00:01:19.888
a somar duas
distribuições gaussianas?

00:01:19.922 --> 00:01:25.079
Poderíamos digitar gaus_a+gaus_b
e ter um novo objeto gaussiano

00:01:25.113 --> 00:01:28.975
com a média
e o desvio padrão corretos.

00:01:29.009 --> 00:01:32.782
Isso seria bastante
mágico, não é?

00:01:32.816 --> 00:01:36.766
Bem, o Python tem um recurso
chamado "Magic Methods",

00:01:36.800 --> 00:01:41.486
específico para ignorar
o comportamento padrão do Python.

00:01:41.846 --> 00:01:43.831
Na próxima parte da aula,

00:01:43.865 --> 00:01:46.440
você vai treinar
escrever métodos mágicos.

