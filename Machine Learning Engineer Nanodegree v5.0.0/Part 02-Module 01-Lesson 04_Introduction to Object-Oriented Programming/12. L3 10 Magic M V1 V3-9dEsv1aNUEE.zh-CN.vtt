WEBVTT
Kind: captions
Language: zh-CN

00:00:03.950 --> 00:00:07.589
刚刚你自己编写了 Gaussian 类 太棒了

00:00:07.589 --> 00:00:10.528
孰能生巧

00:00:10.528 --> 00:00:12.368
要勤加练习

00:00:12.368 --> 00:00:14.990
回忆下高斯分布知识

00:00:14.990 --> 00:00:18.585
将两个高斯分布加到一起是什么意思？

00:00:18.585 --> 00:00:21.010
来看一下这些直观的图形

00:00:21.010 --> 00:00:26.643
假设有两个高斯分布

00:00:26.643 --> 00:00:29.219
你想将它们加到一起

00:00:29.219 --> 00:00:32.149
要计算新分布的均值

00:00:32.149 --> 00:00:36.195
需要将两个高斯分布的均值加到一起

00:00:36.195 --> 00:00:38.804
要计算标准偏差

00:00:38.804 --> 00:00:43.475
需要计算标准偏差平方和的平方根

00:00:43.475 --> 00:00:46.850
这就是两个高斯分布相加的

00:00:46.850 --> 00:00:50.783
数学意义

00:00:50.783 --> 00:00:53.149
但是从代码角度来讲呢？

00:00:53.149 --> 00:00:55.908
如果实例化一个 Gaussian 对象

00:00:55.908 --> 00:00:58.548
然后再实例化另一个 Gaussian 对象

00:00:58.548 --> 00:01:04.215
你输入 gaus_a + gaus_b 就能获得正确结果吗？

00:01:04.215 --> 00:01:10.144
不能的 Python 根本不知道如何将两个高斯分布相加

00:01:10.144 --> 00:01:13.489
代码将产生报错

00:01:13.489 --> 00:01:16.060
如果有一种方式可以告诉 Python

00:01:16.060 --> 00:01:19.555
如何将两个高斯分布加到一起

00:01:19.555 --> 00:01:22.974
使你能够输入 gaus_a + gaus_b

00:01:22.974 --> 00:01:28.569
然后获得新的 Gaussian 对象 并且具有正确的均值和标准偏差

00:01:28.569 --> 00:01:32.560
是不是有点像变魔术?

00:01:32.560 --> 00:01:36.659
Python 有一个功能叫做魔术方法

00:01:36.659 --> 00:01:41.450
专门用于重写默认的 Python 行为

00:01:41.450 --> 00:01:43.685
在下一部分

00:01:43.685 --> 00:01:48.685
你将练习编写魔术方法

