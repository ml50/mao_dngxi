WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.725
从课程的这部分开始

00:00:01.725 --> 00:00:03.825
你将使用 Linux 环境编写 Python 脚本

00:00:03.825 --> 00:00:06.630
而不再使用 Jupyter Notebook

00:00:06.629 --> 00:00:09.509
Jupyter Notebook 对数据科学来说是非常棒的应用

00:00:09.509 --> 00:00:13.474
但并不是编写模块化软件的最好工具

00:00:13.474 --> 00:00:15.054
在下一部分中

00:00:15.054 --> 00:00:19.804
你将会看到像这样的教室 workspace 包含了我即将介绍的代码

00:00:19.804 --> 00:00:21.429
左手边

00:00:21.429 --> 00:00:24.004
是可供访问的文件夹列表

00:00:24.004 --> 00:00:28.030
课程接下来的每个部分都有其对应的文件夹

00:00:28.030 --> 00:00:33.445
课程这一部分对应的是 2_modularized_code 文件夹

00:00:33.445 --> 00:00:36.560
我们将讨论如何将刚才编写的 Distribution

00:00:36.560 --> 00:00:39.900
和 Gaussian 类的代码模块化

00:00:39.899 --> 00:00:45.789
Python 中 模块就是指一个单独的 Python 文件 其中包含一些函数

00:00:45.789 --> 00:00:48.604
类 或者全局变量等

00:00:48.604 --> 00:00:51.864
它们被称为模块 因为它们是模块化的

00:00:51.865 --> 00:00:55.525
意味着你可以在不同的应用中重复使用这些文件

00:00:55.524 --> 00:01:00.229
软件包本质上是放在一个目录中的模块集合

00:01:00.229 --> 00:01:03.909
如果我双击打开包含模块化代码的文件夹

00:01:03.909 --> 00:01:05.769
可以看到其中有三个文件

00:01:05.769 --> 00:01:12.579
这两个是最重要的 Gaussiandistribution.py 和 Generaldistribution.py

00:01:12.579 --> 00:01:16.765
这些文件中包含了与继承那节课中相同的代码

00:01:16.765 --> 00:01:19.879
这个文件夹目前还不是一个正式的软件包

00:01:19.879 --> 00:01:24.569
但是将这些文件放在一个文件夹中 是构建软件包的第一步

00:01:24.569 --> 00:01:28.614
打开 Generaldistribution.py 文件

00:01:28.614 --> 00:01:32.640
Distribution 类的代码与 Jupyter Notebook 中的一样

00:01:32.640 --> 00:01:36.530
打开 Gaussiandistribution.py 文件

00:01:36.530 --> 00:01:39.995
你可以看到其中包含了 Gaussian 类

00:01:39.995 --> 00:01:44.240
这里的代码与 Jupyter Notebook 几乎完全相同

00:01:44.239 --> 00:01:50.334
不过 可以注意到 Gaussiandistribution 文件中导入了 Distribution 类

00:01:50.334 --> 00:01:54.994
这行代码告诉 Python 进入 Generaldistribution.py 文件

00:01:54.995 --> 00:01:58.109
获得 Distribution 类的访问权限

00:01:58.109 --> 00:02:01.640
这里要提示一下 使用相同的语法

00:02:01.640 --> 00:02:05.180
不仅可以导入模块中的类 还可以导入模块中的函数

00:02:05.180 --> 00:02:09.140
不过在这门课中 我们集中探讨面向对象编程

00:02:09.139 --> 00:02:11.844
所以我的代码都是导入类

00:02:11.844 --> 00:02:16.905
我该如何在 Python 应用中实际使用 Gaussiandistribution 模块呢?

00:02:16.905 --> 00:02:20.640
你可以在 example_code.py 文件中看到一个示例

00:02:20.639 --> 00:02:23.579
这个文件导入了 Gaussian 类

00:02:23.580 --> 00:02:26.765
然后实例化了一个 Gaussian 对象

00:02:26.764 --> 00:02:29.809
另外还要注意 我的 example_code 文件和

00:02:29.810 --> 00:02:33.960
Gaussiandistribution.py 文件在同一目录中

00:02:33.960 --> 00:02:38.540
你将在稍后的课程看到 只要 Python 知道在哪里查找软件包

00:02:38.539 --> 00:02:42.984
就不需要将软件包和应用程序放在同一目录中

00:02:42.985 --> 00:02:48.385
接下来 我将打开一个终端窗口运行 example_code.py 文件

00:02:48.384 --> 00:02:51.019
如果你对终端操作不熟悉

00:02:51.020 --> 00:02:52.400
不用太过担心

00:02:52.400 --> 00:02:54.680
课程每一部分都会有一个说明文件

00:02:54.680 --> 00:02:58.460
说明如何在终端中运行命令

00:02:58.460 --> 00:03:02.849
输入 python 2_modularized_code/example_code.py

00:03:08.300 --> 00:03:12.320
然后点击回车

00:03:12.319 --> 00:03:15.969
运行这个 Python 模块 example_code.py

00:03:15.969 --> 00:03:18.590
代码打印出

00:03:18.590 --> 00:03:22.349
实例化高斯分布对象的均值 22

00:03:22.349 --> 00:03:23.699
在下一部分

00:03:23.699 --> 00:03:26.729
你将有机会深入了解这些代码

