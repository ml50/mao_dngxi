WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.805
在本视频中 我将介绍我在制作课程资料时

00:00:02.805 --> 00:00:05.385
采用的一些技巧和方法

00:00:05.385 --> 00:00:08.460
SageMaker 是一个很棒的工具

00:00:08.460 --> 00:00:11.880
能够大大缩短很多机器学习项目的开发时间

00:00:11.880 --> 00:00:15.795
但是 有时候问题难以诊断

00:00:15.795 --> 00:00:19.590
我们在之前的视频中提到了 CloudWatch 日志

00:00:19.590 --> 00:00:22.125
我发现 CloudWatch 日志很有用

00:00:22.125 --> 00:00:24.270
假设我正在训练某个模型

00:00:24.270 --> 00:00:25.725
可以检查训练作业

00:00:25.725 --> 00:00:27.445
看看是否失败了

00:00:27.445 --> 00:00:30.350
最近的训练作业没有失败

00:00:30.350 --> 00:00:32.180
打开一个作业看看

00:00:32.180 --> 00:00:33.770
向下滚动

00:00:33.770 --> 00:00:38.990
就能找到 CloudWatch 日志链接 打开它

00:00:38.990 --> 00:00:42.470
看看该训练作业生成的输出结果

00:00:42.470 --> 00:00:44.555
我发现这些信息很有用

00:00:44.555 --> 00:00:46.670
如果你在训练模型时

00:00:46.670 --> 00:00:50.975
添加了你自己的代码 则尤其有用

00:00:50.975 --> 00:00:52.970
例如对于任何 PyTorch 模型

00:00:52.970 --> 00:00:56.045
你将添加你自己的训练方法

00:00:56.045 --> 00:00:59.150
有时候会出现问题 并且非常难以诊断

00:00:59.150 --> 00:01:02.060
但是查看这些输出结果很有用

00:01:02.060 --> 00:01:06.395
尤其是如果在提供的代码中添加了其他输出的话

00:01:06.395 --> 00:01:09.230
另一个常用技巧是

00:01:09.230 --> 00:01:12.745
可以复制粘贴内容

00:01:12.745 --> 00:01:16.290
在 SageMaker 中需要完成的很多任务

00:01:16.290 --> 00:01:20.740
肯定与在 SageMaker 中已经完成的其他任务非常相似

00:01:20.740 --> 00:01:22.230
例如 训练模型

00:01:22.230 --> 00:01:24.259
有时候需要几行代码

00:01:24.259 --> 00:01:28.310
但是两个被训练的不同模型之间的差别通常很小

00:01:28.310 --> 00:01:30.020
所以复制粘贴很管用

00:01:30.020 --> 00:01:32.810
还有一点要提的是参考文档

00:01:32.810 --> 00:01:37.025
主要参考文档是这个文档

00:01:37.025 --> 00:01:42.415
但是 SageMaker 平台本身变化非常快

00:01:42.415 --> 00:01:45.080
有时候文档来不及更新

00:01:45.080 --> 00:01:48.230
你并非始终能够

00:01:48.230 --> 00:01:52.160
在文档里找到所有的功能

00:01:52.160 --> 00:01:54.425
文档是个不错的参考工具

00:01:54.425 --> 00:01:56.720
但有时候需要更深入地探索

00:01:56.720 --> 00:02:01.490
另一个很实用的文档是 Python SDK

00:02:01.490 --> 00:02:04.040
它属于高阶方法

00:02:04.040 --> 00:02:08.255
这个文档介绍了使用 SageMaker 的不同方法

00:02:08.255 --> 00:02:09.775
很有用

00:02:09.775 --> 00:02:12.674
并且这个文档很实用

00:02:12.674 --> 00:02:17.060
但有时候跟 SageMaker 文档一样

00:02:17.060 --> 00:02:19.640
代码变化太快 文档来不及更新

00:02:19.640 --> 00:02:21.470
如果有疑问的话

00:02:21.470 --> 00:02:24.920
可以看看实际代码库本身

00:02:24.920 --> 00:02:28.250
代码库位于 GitHub 上

00:02:28.250 --> 00:02:31.100
查看代码库很有用的原因之一是

00:02:31.100 --> 00:02:35.955
Python SDK 或高阶方法

00:02:35.955 --> 00:02:37.770
会代表你做出一些选择

00:02:37.770 --> 00:02:41.630
这很棒 因为可以缩短开发时间

00:02:41.630 --> 00:02:43.160
但是也难以诊断问题

00:02:43.160 --> 00:02:45.250
因为你并非始终知道所发生的情况

00:02:45.250 --> 00:02:47.620
如果你想确切地了解所发生的情况

00:02:47.620 --> 00:02:50.315
可以查看实际代码

00:02:50.315 --> 00:02:54.020
例如打开 estimator Python 文件

00:02:54.020 --> 00:02:58.070
其中包含 estimator 类的说明

00:02:58.070 --> 00:02:59.450
向下滚动

00:02:59.450 --> 00:03:01.000
并看看

00:03:01.000 --> 00:03:04.520
当我设置某些超参数或者训练或拟合模型时

00:03:04.520 --> 00:03:07.160
会发生什么

00:03:07.160 --> 00:03:09.920
我发现浏览代码很有用

00:03:09.920 --> 00:03:11.420
这些代码结构清晰

00:03:11.420 --> 00:03:13.055
当我遇到问题时

00:03:13.055 --> 00:03:15.035
通常都会去看看代码库

00:03:15.035 --> 00:03:18.710
最后还有一条小技巧

00:03:18.710 --> 00:03:21.890
我在制作这些学习资料时遇到的大部分问题

00:03:21.890 --> 00:03:25.465
都与命名创建的各种对象有关

00:03:25.465 --> 00:03:29.240
唯一名称有好有坏

00:03:29.240 --> 00:03:30.320
好处是

00:03:30.320 --> 00:03:34.970
之后可以重复使用创建的对象

00:03:34.970 --> 00:03:37.055
因为每个对象都有唯一名称

00:03:37.055 --> 00:03:39.990
坏处是

00:03:39.990 --> 00:03:43.250
如果不注意命名规则的话

00:03:43.250 --> 00:03:46.895
或者名称不唯一的话 就会遇到问题

00:03:46.895 --> 00:03:51.200
小技巧就讲完了 希望你能喜欢使用 SageMaker加油！

