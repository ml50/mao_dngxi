WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.310
大家好 我是 Sean Carrell

00:00:02.310 --> 00:00:07.320
在这节课 我将介绍 Amazon 的 SageMaker 服务

00:00:07.320 --> 00:00:09.150
学完这节课后

00:00:09.150 --> 00:00:12.179
你将明白 SageMaker 的运行原理

00:00:12.179 --> 00:00:15.089
并且有机会自己操作 SageMaker

00:00:15.089 --> 00:00:18.629
首先我们来回答三个大问题

00:00:18.629 --> 00:00:21.454
什么是 SageMaker？为何要使用它

00:00:21.454 --> 00:00:25.443
它的运行原理是什么首先 什么是 SageMaker？

00:00:25.643 --> 00:00:31.259
实际上 SageMaker 由两个非常实用的工具组成

00:00:31.260 --> 00:00:35.414
第一个是受管理的 jupyter notebook 实例

00:00:35.414 --> 00:00:39.143
它与你知道和喜欢的 jupyter notebook 是一样的

00:00:39.145 --> 00:00:43.475
但是它并没有运行在 workspace 或你自己的电脑上

00:00:43.475 --> 00:00:46.460
而是运行在由亚马逊托管的虚拟机上

00:00:46.460 --> 00:00:48.649
你在这门纳米学位课程中已经发现

00:00:48.649 --> 00:00:52.879
Notebook 使我们能够探索和处理数据

00:00:52.880 --> 00:00:57.500
并且可以用来测试一些想法 而无需使用复杂强大的机器

00:00:57.500 --> 00:01:01.070
SageMaker 提供的第二个工具是 API

00:01:01.070 --> 00:01:02.719
API 可以简化

00:01:02.719 --> 00:01:06.334
某些复杂的计算任务

00:01:06.334 --> 00:01:09.500
例如训练或部署机器学习模型

00:01:09.500 --> 00:01:11.495
为何要使用 SageMaker？

00:01:11.495 --> 00:01:13.055
简单的答案是

00:01:13.055 --> 00:01:18.280
它使我们要执行的很多机器学习任务轻松多了

00:01:18.280 --> 00:01:22.409
例如 在之前看过的机器学习工作流程中

00:01:22.409 --> 00:01:27.474
SageMaker 提供了让每一步都更简单的工具

00:01:27.474 --> 00:01:31.924
Notebook 可以用来探索和处理数据

00:01:31.924 --> 00:01:36.435
API 可以简化建模和部署步骤

00:01:36.435 --> 00:01:39.935
SageMaker 的运行原理是什么？

00:01:39.935 --> 00:01:43.655
在大部分情况下 当我们提到使用 SageMaker

00:01:43.655 --> 00:01:47.238
实际上就是在托管 notebook 中操作

00:01:47.438 --> 00:01:51.188
此 notebook 具有我们之前讨论过的所有优势

00:01:51.188 --> 00:01:55.253
此外 还能够访问 SageMaker API

00:01:55.254 --> 00:01:59.409
SageMaker API 本身可以看做一个工具集合

00:01:59.409 --> 00:02:04.039
这些工具可以处理训练和推理流程

00:02:04.040 --> 00:02:07.310
训练流程就是我们熟知的流程

00:02:07.310 --> 00:02:10.060
系统会构建一个计算任务

00:02:10.060 --> 00:02:15.093
通常 此任务负责用机器学习模型拟合数据

00:02:15.093 --> 00:02:18.125
然后在虚拟机上执行此任务

00:02:18.125 --> 00:02:21.378
生成的模型（例如在随机数模型中会生成树

00:02:21.378 --> 00:02:24.715
在神经网络模型中会生成层级）

00:02:24.715 --> 00:02:26.368
然后会保存到文件中

00:02:26.568 --> 00:02:30.843
保存的数据称为模型工件

00:02:30.843 --> 00:02:35.030
推理流程与训练流程很相似

00:02:35.030 --> 00:02:41.830
首先构建一个计算任务来执行推理

00:02:41.830 --> 00:02:45.710
然后此任务在虚拟机上执行

00:02:45.710 --> 00:02:47.338
但是 在推理流程中

00:02:47.538 --> 00:02:50.568
虚拟机会等待我们向其发送数据

00:02:50.568 --> 00:02:55.158
收到数据后 虚拟机利用这些数据

00:02:55.158 --> 00:02:57.138
以及在训练流程中创建的模型工件进行推理

00:02:57.139 --> 00:03:00.019
然后返回结果

00:03:00.020 --> 00:03:04.060
这就是 SageMaker 服务的基本运行原理

00:03:04.060 --> 00:03:06.183
在介绍任何其他详情之前

00:03:06.383 --> 00:03:11.383
我们先用 SageMaker 构建我们的首个模型

