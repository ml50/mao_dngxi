WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.795
将训练和验证数据上传到 S3 后

00:00:03.795 --> 00:00:05.655
下面开始构建模型

00:00:05.655 --> 00:00:07.485
当我们提到“模型”一词时

00:00:07.485 --> 00:00:10.005
应该要知道它的含义

00:00:10.005 --> 00:00:13.980
现在模型是指 SageMaker 理解的模型

00:00:13.980 --> 00:00:18.870
它是一个信息集合 包括在训练过程中创建的所有模型工件

00:00:18.870 --> 00:00:24.630
以及描述应该如何使用模型工件的其他信息

00:00:24.630 --> 00:00:28.995
当我们逐步创建模型时 将更容易理解这些话的含义

00:00:28.995 --> 00:00:32.580
为了了解高阶步骤

00:00:32.580 --> 00:00:34.980
我们来看看高阶 notebook

00:00:34.980 --> 00:00:36.750
这是高阶 notebook

00:00:36.750 --> 00:00:41.865
向下滚动到 XGBoost 模型的创建和训练部分

00:00:41.865 --> 00:00:48.195
首先获取 XGBoost docker 容器的 URI

00:00:48.195 --> 00:00:51.075
然后创建一个 estimator 对象

00:00:51.075 --> 00:00:57.265
需要指定算法 即容器的链接

00:00:57.265 --> 00:00:59.885
还要指定运行算法的

00:00:59.885 --> 00:01:03.680
虚拟机的类型

00:01:03.680 --> 00:01:05.720
输出位置

00:01:05.720 --> 00:01:10.550
以及其他信息 例如虚拟机的角色

00:01:10.550 --> 00:01:13.109
还有其他会话信息

00:01:13.109 --> 00:01:17.515
接下来设置算法超参数

00:01:17.515 --> 00:01:20.375
最后调用 fit() 方法

00:01:20.375 --> 00:01:24.410
传入训练和验证集的链接

00:01:24.410 --> 00:01:31.130
这三步的最终目标是创建一个训练作业

00:01:31.130 --> 00:01:33.640
顾名思义 训练作业的职责是

00:01:33.640 --> 00:01:37.490
对监督式数据运行算法以拟合模型

00:01:37.490 --> 00:01:42.200
并将生成的拟合模型保存到某个文件中

00:01:42.200 --> 00:01:44.960
我们将在低阶 notebook 中手动设置训练作业

00:01:44.960 --> 00:01:49.485
回到低阶 notebook

00:01:49.485 --> 00:01:52.000
为了创建训练作业

00:01:52.000 --> 00:01:58.375
我们将在一个大型字典对象中指定所有信息

00:01:58.375 --> 00:02:01.790
将该字典对象称为 training_params

00:02:01.790 --> 00:02:05.180
当然 还需要指定

00:02:05.180 --> 00:02:08.740
包含 XGBoost 算法的 docker 容器对应的 URI

00:02:08.740 --> 00:02:12.020
接着指定最终将创建的虚拟机

00:02:12.020 --> 00:02:15.320
应具备的角色

00:02:15.320 --> 00:02:18.540
我们需要指定要运行的算法

00:02:18.540 --> 00:02:21.775
方法是指定容器的链接

00:02:21.775 --> 00:02:26.795
还需要指定生成的模型的保存位置

00:02:26.795 --> 00:02:31.820
这个算法输出称为模型工件

00:02:31.820 --> 00:02:33.739
接下来我们需要描述

00:02:33.739 --> 00:02:39.065
运行算法所在的虚拟机应该具备的属性

00:02:39.065 --> 00:02:43.390
对我们来说 我们将使用 1 个虚拟机

00:02:43.390 --> 00:02:49.254
该虚拟机相对中等强大 我们不需要太多的存储空间

00:02:49.254 --> 00:02:53.125
这个参数会设置超时条件

00:02:53.125 --> 00:02:55.900
如果训练算法遇到问题

00:02:55.900 --> 00:02:58.780
会无限运行或是很长的循环

00:02:58.780 --> 00:03:02.305
这个条件可以使虚拟机不会永远运行下去

00:03:02.305 --> 00:03:05.530
这些就是算法规范参数

00:03:05.530 --> 00:03:10.120
现在需要指定所选算法特有的参数

00:03:10.120 --> 00:03:12.370
我们的算法是 XGBoost

00:03:12.370 --> 00:03:14.170
我们可以在这里指定

00:03:14.170 --> 00:03:17.470
你可能发现了 我们在这里选择的超参数

00:03:17.470 --> 00:03:21.160
与在高阶 notebook 中设置的超参数一样

00:03:21.160 --> 00:03:25.375
接着 我们需要告诉 SageMaker 从何处获取数据

00:03:25.375 --> 00:03:29.710
我们需要告诉 SageMaker 训练数据在哪

00:03:29.710 --> 00:03:32.174
对我们来说 在 S3 中

00:03:32.174 --> 00:03:35.020
属于 CSV 数据

00:03:35.020 --> 00:03:37.110
还要告诉验证数据的位置

00:03:37.110 --> 00:03:40.940
也在 S3 上 也是 CSV 数据

00:03:40.940 --> 00:03:44.750
我们已经指定了要使用什么算法

00:03:44.750 --> 00:03:47.705
该算法特定的参数

00:03:47.705 --> 00:03:50.315
以及发送给该算法的数据

00:03:50.315 --> 00:03:53.360
现在只剩下

00:03:53.360 --> 00:03:57.090
让 SageMaker 使用我们选择的参数构建训练作业

00:03:57.090 --> 00:04:00.890
还有一个参数必须指定 即名称

00:04:00.890 --> 00:04:03.740
每个训练作业都必须有一个名称

00:04:03.740 --> 00:04:06.920
该名称必须是唯一的

00:04:06.920 --> 00:04:13.085
设定唯一名称的方法是在名称后面添加时间戳

00:04:13.085 --> 00:04:14.630
设定好名称后

00:04:14.630 --> 00:04:19.060
我们要求 SageMaker 创建训练作业 SageMaker 开始创建了

00:04:19.060 --> 00:04:22.335
就像批次转换一样

00:04:22.335 --> 00:04:24.560
训练作业也在后台创建

00:04:24.560 --> 00:04:28.420
创建好后就会执行

00:04:28.420 --> 00:04:32.000
如果我们想直观地了解发生的情况

00:04:32.000 --> 00:04:35.750
并且想知道何时训练作业运行完毕了

00:04:35.750 --> 00:04:42.829
我们需要使用这个 logs_for_job 方法并设定 wait=true

00:04:42.829 --> 00:04:45.400
现在只需等待训练作业运行完毕了

