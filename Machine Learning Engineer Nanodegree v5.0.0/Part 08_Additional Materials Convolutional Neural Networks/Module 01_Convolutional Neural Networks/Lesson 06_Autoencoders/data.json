{
  "data": {
    "lesson": {
      "id": 727968,
      "key": "5038e8a7-9009-428b-bd59-f2388a6da2aa",
      "title": "Autoencoders",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Autoencoders are neural networks used for data compression, image de-noising, and dimensionality reduction. Here, you'll build autoencoders using PyTorch.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/5038e8a7-9009-428b-bd59-f2388a6da2aa/727968/1545248339304/Autoencoders+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/5038e8a7-9009-428b-bd59-f2388a6da2aa/727968/1545248336094/Autoencoders+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 728003,
          "key": "36d6aa0d-b759-482d-ab1c-e3d0a73ba297",
          "title": "Autoencoders",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "36d6aa0d-b759-482d-ab1c-e3d0a73ba297",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797395,
              "key": "cfba160c-42cf-47b5-bfa3-891f9be02cdf",
              "title": "Autoencoders 01 Autoencoders V2 RENDER V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "a5zHMWOq0fc",
                "china_cdn_id": "a5zHMWOq0fc.mp4"
              }
            }
          ]
        },
        {
          "id": 728004,
          "key": "cf51d8ea-1f10-4e58-ac45-661b42701bcf",
          "title": "A Linear Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "cf51d8ea-1f10-4e58-ac45-661b42701bcf",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797396,
              "key": "698da7d0-be5a-4e5c-a584-62db87828b52",
              "title": "2 Simple Autoencoder V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "KbmfyDNxL5U",
                "china_cdn_id": "KbmfyDNxL5U.mp4"
              }
            }
          ]
        },
        {
          "id": 728010,
          "key": "f97534e9-e64b-40e8-a4cc-1b9d66bee9a6",
          "title": "Pre-Notebook: Linear Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f97534e9-e64b-40e8-a4cc-1b9d66bee9a6",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728233,
              "key": "7e9ca9a8-79f8-47fd-9cbc-8bf9bc01254a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Notebook: Linear Autoencoder\n\n**It's suggested that you open the notebook in a new, working tab and continue working on it as you go through the instructional videos in this tab.** This way you can toggle between learning new skills and coding/applying new skills.\n\nTo open this notebook, you have two options:\n>- Go to the next page in the classroom (recommended).\n- Clone the repo from [Github](https://github.com/udacity/deep-learning-v2-pytorch) and open the notebook **Simple_Autoencoder_Exercise.ipynb** in the **autoencoder > linear-autoencoder** folder.  You can either download the repository with `git clone https://github.com/udacity/deep-learning-v2-pytorch.git`, or download it as an archive file from [this link](https://github.com/udacity/deep-learning-v2-pytorch/archive/master.zip).\n\n# Instructions\n\n* Define and train a linear autoencoder\n\nThis is a self-assessed lab. If you need any help or want to check your answers, feel free to check out the solutions notebook in the same folder, or by clicking [here](https://github.com/udacity/deep-learning-v2-pytorch/blob/master/autoencoder/linear-autoencoder/Simple_Autoencoder_Solution.ipynb).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 728011,
          "key": "12fddd7b-f3b4-4f42-b948-59e301eadc2e",
          "title": "Notebook: Linear Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "12fddd7b-f3b4-4f42-b948-59e301eadc2e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728235,
              "key": "d7f1b45f-5f04-4ce2-af6d-1ca4c51c92bf",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewb3dohjcrq1f",
              "pool_id": "jupyter",
              "view_id": "jupyter-pz83fnnz2ul",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowGrade": false,
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/Simple_Autoencoder_Exercise.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 728005,
          "key": "b098b327-bb0f-4f21-913a-129c400e142e",
          "title": "Defining & Training an Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b098b327-bb0f-4f21-913a-129c400e142e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797397,
              "key": "84127d80-3310-426d-929d-7edd9a799b0d",
              "title": "3 Defining Training Autoenc V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OWrlQUSGqyo",
                "china_cdn_id": "OWrlQUSGqyo.mp4"
              }
            }
          ]
        },
        {
          "id": 728006,
          "key": "e314b54a-3622-4ac7-82de-13218bb8e977",
          "title": "A Simple Solution",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e314b54a-3622-4ac7-82de-13218bb8e977",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797398,
              "key": "d6f73e0d-1a17-4e82-ae3c-175b7f27b0e4",
              "title": "4 A Simple Solution V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Jh3mbomqpw8",
                "china_cdn_id": "Jh3mbomqpw8.mp4"
              }
            }
          ]
        },
        {
          "id": 728007,
          "key": "c755b57b-79c1-4b73-af99-7fb97d44a208",
          "title": "Learnable Upsampling",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c755b57b-79c1-4b73-af99-7fb97d44a208",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797399,
              "key": "ab7c0fd9-c6b1-42a8-825f-578163a0a83b",
              "title": "Autoencoders 05 Learnable Sampling V2 RENDER V4",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "KjztLwPksj8",
                "china_cdn_id": "KjztLwPksj8.mp4"
              }
            }
          ]
        },
        {
          "id": 728008,
          "key": "36ac40ab-5a90-4b99-94a0-ba811d0934f8",
          "title": "Transpose Convolutions",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "36ac40ab-5a90-4b99-94a0-ba811d0934f8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797400,
              "key": "3dd49377-3fee-4ee8-9629-eb3b8896f429",
              "title": "Autoencoders 06 Transpose Convolution RENDER V4",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hnnLAC1Q0zg",
                "china_cdn_id": "hnnLAC1Q0zg.mp4"
              }
            }
          ]
        },
        {
          "id": 728009,
          "key": "ad4fc9c5-79ed-4282-87f8-d71595c9bd22",
          "title": "Convolutional Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ad4fc9c5-79ed-4282-87f8-d71595c9bd22",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797401,
              "key": "68e200ab-738f-4a6a-862a-79642b612456",
              "title": "7 Convolutional Autoenc V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "QCA8QeZeDW8",
                "china_cdn_id": "QCA8QeZeDW8.mp4"
              }
            }
          ]
        },
        {
          "id": 728012,
          "key": "e801895e-630a-4174-bb59-51d7f9c2a4d8",
          "title": "Pre-Notebook: Convolutional Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e801895e-630a-4174-bb59-51d7f9c2a4d8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728236,
              "key": "2686a677-8872-4e1c-a31c-d35729418ff5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Notebook: Convolutional Autoencoder\n\n**It's suggested that you open the notebook in a new, working tab and continue working on it as you go through the instructional videos in this tab.** This way you can toggle between learning new skills and coding/applying new skills.\n\nTo open this notebook, you have two options:\n>- Go to the next page in the classroom (recommended).\n- Clone the repo from [Github](https://github.com/udacity/deep-learning-v2-pytorch) and open the notebook **Convolutional_Autoencoder_Exercise.ipynb** in the **autoencoder > convolutional-autoencoder** folder.  You can either download the repository with `git clone https://github.com/udacity/deep-learning-v2-pytorch.git`, or download it as an archive file from [this link](https://github.com/udacity/deep-learning-v2-pytorch/archive/master.zip).\n\n# Instructions\n\n* Define and train a convolutional autoencoder\n\nThis is a self-assessed lab. If you need any help or want to check your answers, feel free to check out the solutions notebook in the same folder, or by clicking [here](https://github.com/udacity/deep-learning-v2-pytorch/blob/master/autoencoder/convolutional-autoencoder/Convolutional_Autoencoder_Solution.ipynb).",
              "instructor_notes": ""
            },
            {
              "id": 728240,
              "key": "06ce08cc-a84a-4dab-b772-b2f3b0425b15",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Exercise: GPU Workspaces\n\n>**You *do not* need to enable GPU to complete this exercise.** This is left as an optional exercise; you will be responsible for moving your models and data to GPU, should you choose to enable it.\n\nThe next workspace is **GPU-enabled**, which means you can select to train on a GPU instance. The recommendation is this:\n* Load in data, test functions and models (checking parameters and doing a short training loop) while in CPU (non-enabled) mode\n* When you're ready to extensively train and test your model, **enable** GPU to quickly train the model!\n\nAll models and data they see as input will have to be moved to the GPU device, so take note of the relevant movement code in the model creation and training process.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 728013,
          "key": "4e583fc8-adb0-4b1d-8432-0d3518e2a045",
          "title": "Notebook: Convolutional Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "4e583fc8-adb0-4b1d-8432-0d3518e2a045",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728239,
              "key": "5549983c-17fb-48a4-9ff5-920b980c9690",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewcz8akq85t5i",
              "pool_id": "jupytergpu",
              "view_id": "jupyter-ck5s0u8bdja",
              "gpu_capable": true,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowGrade": false,
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/Convolutional_Autoencoder_Exercise.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 728014,
          "key": "b641cfac-61b4-4a25-90f0-3c9dc96c0704",
          "title": "Convolutional Solution",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b641cfac-61b4-4a25-90f0-3c9dc96c0704",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797402,
              "key": "4e6c13c1-5762-4efd-8f18-7e9f51607277",
              "title": "8 Conv Solution V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "2_Yw9LLomCo",
                "china_cdn_id": "2_Yw9LLomCo.mp4"
              }
            },
            {
              "id": 766518,
              "key": "4addc299-72ce-4a2e-b3ab-6a0041780f5b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "You may notice that I am not using model.train() or eval() here, and that is because none of the layers in this model will change behavior between these modes. So, you could use these modes, but it is not necessary. Evaluation mode affects dropout layers that change dynamically during training, whereas our typical convolutional and maxpooling layers will behave as their weights dictate!",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 728015,
          "key": "18f33fd7-7088-46ba-a6fd-46e978e43346",
          "title": "Upsampling & Denoising",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "18f33fd7-7088-46ba-a6fd-46e978e43346",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797403,
              "key": "4ece9a4b-5951-494f-a88d-4da1c920d24a",
              "title": "9 Upsampling Denoising V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "XX63da4EPN0",
                "china_cdn_id": "XX63da4EPN0.mp4"
              }
            },
            {
              "id": 728237,
              "key": "a74508d1-b38f-4541-9919-5a3378ef3703",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Upsampling, Alternative Solution\n\nFeel free to check out the solutions notebook in the previous workspace or in your Github repository's convolutional-autoencoder folder. You can also view it directly by clicking [here](https://github.com/udacity/deep-learning-v2-pytorch/blob/master/autoencoder/convolutional-autoencoder/Upsampling_Solution.ipynb).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 728331,
          "key": "82beb99b-c732-40dd-9be4-6aba5468fe95",
          "title": "De-noising",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "82beb99b-c732-40dd-9be4-6aba5468fe95",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797404,
              "key": "66ad17d0-a2b8-4888-96cb-2aca48bb44d8",
              "title": "10 Denoising V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "RIfEhKev24I",
                "china_cdn_id": "RIfEhKev24I.mp4"
              }
            }
          ]
        },
        {
          "id": 728197,
          "key": "114f7ee0-00cd-4316-b058-019defb95a64",
          "title": "Pre-Notebook: De-noising Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "114f7ee0-00cd-4316-b058-019defb95a64",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728337,
              "key": "3d74d116-df3f-4629-b6f9-27f0c54e44e0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Notebook: De-noising Autoencoder\n\nTry defining and training an autoencoder for denoising images!\n\nTo open this notebook, you have two options:\n>- Go to the next page in the classroom (recommended).\n- Clone the repo from [Github](https://github.com/udacity/deep-learning-v2-pytorch) and open the notebook **Denoising_Autoencoder_Exercise.ipynb** in the **autoencoder > denoising-autoencoder** folder.  You can either download the repository with `git clone https://github.com/udacity/deep-learning-v2-pytorch.git`, or download it as an archive file from [this link](https://github.com/udacity/deep-learning-v2-pytorch/archive/master.zip).\n\n# Instructions\n\n* Define and train a convolutional autoencoder\n* Add more/deeper layers to create a successful de-noiser\n\nThis is a self-assessed lab. If you need any help or want to check your answers, feel free to check out *one kind of solution* in the following notebook, or by clicking [here](https://github.com/udacity/deep-learning-v2-pytorch/blob/master/autoencoder/denoising-autoencoder/Denoising_Autoencoder_Solution.ipynb).",
              "instructor_notes": ""
            },
            {
              "id": 728338,
              "key": "b2eccb51-8e1f-4493-9c9b-98cbe8db28f3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Exercise: GPU Workspaces\n\n>**You *do not* need to enable GPU to complete this exercise.** This is left as an optional exercise; you will be responsible for moving your models and data to GPU, should you choose to enable it.\n\nThe next workspace is **GPU-enabled**, which means you can select to train on a GPU instance. The recommendation is this:\n* Load in and test models while in CPU (non-enabled) mode\n* When you're ready to extensively train and test your model, you'll have to add GPU functionality (in this case, the code *is not* provided for you)  \n* Once you've moved your model and data to GPU, you can **enable** GPU to quickly train the model!\n\nAll models and data they see as input will have to be moved to the GPU device, so take note of the relevant movement code in the model creation and training process.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 728198,
          "key": "f6365d89-3bf7-42f0-9d35-b05af3fe6225",
          "title": "Notebook: De-noising Autoencoder",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f6365d89-3bf7-42f0-9d35-b05af3fe6225",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728340,
              "key": "5c77be02-04a3-42e2-a69c-c1237dc1304e",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewfg84g2jma2g",
              "pool_id": "jupytergpu",
              "view_id": "jupyter-p33aypro3vh",
              "gpu_capable": true,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowGrade": false,
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/Denoising_Autoencoder_Exercise.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        }
      ]
    }
  }
}