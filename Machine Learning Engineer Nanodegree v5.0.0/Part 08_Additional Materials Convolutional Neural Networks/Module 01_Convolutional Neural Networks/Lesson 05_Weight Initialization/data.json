{
  "data": {
    "lesson": {
      "id": 727967,
      "key": "f5b98af4-f45d-4560-9984-6c6f6e2bd3fa",
      "title": "Weight Initialization",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "In this lesson, you'll learn how to find good initial weights for a neural network. Having good initial weights can place the neural network closer to the optimal solution.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/f5b98af4-f45d-4560-9984-6c6f6e2bd3fa/727967/1545248069834/Weight+Initialization+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/f5b98af4-f45d-4560-9984-6c6f6e2bd3fa/727967/1545248066160/Weight+Initialization+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 727989,
          "key": "684bd4bc-bd8d-4df2-acd4-9dda2b04d578",
          "title": "Weight Initialization",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "684bd4bc-bd8d-4df2-acd4-9dda2b04d578",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797389,
              "key": "10c2abe8-1349-4e3f-9b19-f494ba9d3228",
              "title": "1 Weight Initialization V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Ehc60si91Wg",
                "china_cdn_id": "Ehc60si91Wg.mp4"
              }
            }
          ]
        },
        {
          "id": 727990,
          "key": "f5fa2580-c44a-4d37-a84b-60a42dabe871",
          "title": "Constant Weights",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f5fa2580-c44a-4d37-a84b-60a42dabe871",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797390,
              "key": "45add896-ace0-4b35-a1db-31dff3736c4d",
              "title": "2 Constant Weights V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "zR4fECgeZ7Y",
                "china_cdn_id": "zR4fECgeZ7Y.mp4"
              }
            },
            {
              "id": 728175,
              "key": "b557833b-af12-4407-b590-2ed5b71bd089",
              "title": "Reflect",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b557833b-af12-4407-b590-2ed5b71bd089",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "How might you better define initial weights, such that backpropagation will be able to differentiate between weight behaviors?"
              },
              "answer": {
                "text": "It's key to include an element of uniqueness, or **randomness**! Better weights might be selected randomly from within a specified range. By adding variety and all unique weight values, we can ensure that backpropagation will have different activations to look at in the hidden layers, and it can respond to those differences.",
                "video": null
              }
            }
          ]
        },
        {
          "id": 727991,
          "key": "19f27e9f-3807-42a2-94fb-e16db7970c42",
          "title": "Random Uniform",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "19f27e9f-3807-42a2-94fb-e16db7970c42",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797391,
              "key": "9ef9614e-7ba8-495a-9762-8489322a2e01",
              "title": "4 Random Uniform V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "FacdIomrLIw",
                "china_cdn_id": "FacdIomrLIw.mp4"
              }
            }
          ]
        },
        {
          "id": 727992,
          "key": "2995e140-588f-49a1-b44a-0fada299ad1e",
          "title": "General Rule",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2995e140-588f-49a1-b44a-0fada299ad1e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797392,
              "key": "ccb7ec57-9e35-4610-9178-b296338d90c2",
              "title": "5 General Rule V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "YKe9iOUMmsI",
                "china_cdn_id": "YKe9iOUMmsI.mp4"
              }
            }
          ]
        },
        {
          "id": 727993,
          "key": "499ab864-703d-49b7-a333-4711ef161e9c",
          "title": "Normal Distribution",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "499ab864-703d-49b7-a333-4711ef161e9c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797393,
              "key": "debf3d65-6fc7-4ace-b29a-955b80cfbc29",
              "title": "6 Normal Distribution V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xm43q4qD2tI",
                "china_cdn_id": "xm43q4qD2tI.mp4"
              }
            }
          ]
        },
        {
          "id": 727994,
          "key": "affdbd8d-61fb-4e3f-9095-28ab2371aa5a",
          "title": "Pre-Notebook: Weight Initialization, Normal Distribution",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "affdbd8d-61fb-4e3f-9095-28ab2371aa5a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728166,
              "key": "b9f3bf63-91c5-4611-a322-25e779333de5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Notebook: Weight Initialization\n\nNow, you're ready to try out a weight initialization method that you define.\n\nTo open this notebook, you have two options:\n>- Go to the next page in the classroom (recommended).\n- Clone the repo from [Github](https://github.com/udacity/deep-learning-v2-pytorch) and open the notebook **weight_initialization_exercise.ipynb** in the **weight-initialization* folder.  You can either download the repository with `git clone https://github.com/udacity/deep-learning-v2-pytorch.git`, or download it as an archive file from [this link](https://github.com/udacity/deep-learning-v2-pytorch/archive/master.zip).\n\n# Instructions\n\n* Load in the FashionMNIST data\n* Define a function to initialize the weights of your model, taking values from a normal distribution\n* See how a model *without any explicit* weight initialization performs\n\nThis is a self-assessed lab. If you need any help or want to check your answers, feel free to check out the solutions notebook in the same folder, or by clicking [here](https://github.com/udacity/deep-learning-v2-pytorch/blob/master/weight-initialization/weight_initialization_solution.ipynb).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 727995,
          "key": "66f0b793-f83a-4605-ad23-f872977e2a7d",
          "title": "Notebook: Normal & No Initialization",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "66f0b793-f83a-4605-ad23-f872977e2a7d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 728168,
              "key": "155b3814-8a77-4f84-9c92-4e1889afa362",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewkpuwsew0no8",
              "pool_id": "jupyter",
              "view_id": "jupyter-ulr9annzve",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowGrade": false,
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/weight_initialization_exercise.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 727996,
          "key": "268275a4-ec27-47bf-81c7-29051d1d94a0",
          "title": "Solution and Default Initialization",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "268275a4-ec27-47bf-81c7-29051d1d94a0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 797394,
              "key": "72977c0d-0af2-4fc3-8975-496dca4ea33e",
              "title": "7 Sol Default Init V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xIn8XLbR1LM",
                "china_cdn_id": "xIn8XLbR1LM.mp4"
              }
            }
          ]
        },
        {
          "id": 729582,
          "key": "497bc590-6327-433e-8407-a01b41e63121",
          "title": "Additional Material",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "497bc590-6327-433e-8407-a01b41e63121",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 729583,
              "key": "c187f45e-491c-4175-aedc-6ce8832bf6ed",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Additional Material\nNew techniques for dealing with weights are discovered every few years. We've provided the most popular papers in this field over the years.\n- [Understanding the difficulty of training deep feedforward neural networks](http://jmlr.org/proceedings/papers/v9/glorot10a/glorot10a.pdf)\n- [Delving Deep into Rectifiers:\nSurpassing Human-Level Performance on ImageNet Classification](https://arxiv.org/pdf/1502.01852v1.pdf)\n- [Batch Normalization: Accelerating Deep Network Training by\nReducing Internal Covariate Shift](https://arxiv.org/pdf/1502.03167v2.pdf)",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  }
}