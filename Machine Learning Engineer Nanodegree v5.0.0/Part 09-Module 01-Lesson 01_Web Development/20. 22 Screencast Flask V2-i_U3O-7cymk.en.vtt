WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.200
This is another type of Udacity workspace.

00:00:03.200 --> 00:00:07.820
It's an IDE or integrated development environment,

00:00:07.820 --> 00:00:10.679
which provides tools for writing software.

00:00:10.679 --> 00:00:12.504
It's got a file browser,

00:00:12.505 --> 00:00:14.915
a terminal, and a code editor.

00:00:14.914 --> 00:00:17.744
Here, I've set up a Flask app for you,

00:00:17.745 --> 00:00:20.320
and I'm going to give a tour of the different files.

00:00:20.320 --> 00:00:23.910
First, there's the worldbank.py file.

00:00:23.910 --> 00:00:27.785
This is the file you'll run in the terminal to start the Web app.

00:00:27.785 --> 00:00:32.734
This file is importing something called App from the worldbankapp folder.

00:00:32.734 --> 00:00:35.490
You'll see what this app is in a minute.

00:00:35.490 --> 00:00:37.100
When the application runs,

00:00:37.100 --> 00:00:42.210
it'll be on port 3,001 as you can see here in the port attribute.

00:00:42.210 --> 00:00:45.615
What's inside this worldbankapp folder?

00:00:45.615 --> 00:00:50.155
There's an init file which means I've set this up like a Python package.

00:00:50.155 --> 00:00:51.689
When the package is run,

00:00:51.689 --> 00:00:53.780
the init file gets run first.

00:00:53.780 --> 00:00:55.245
Here's the init file.

00:00:55.244 --> 00:01:01.219
First, I'm importing the Flask library and then I create a variable called app,

00:01:01.219 --> 00:01:03.589
and finally import the routes file.

00:01:03.590 --> 00:01:06.439
It's a bit tricky to see how all of these lines of

00:01:06.439 --> 00:01:09.495
code work together relative to the file directory.

00:01:09.495 --> 00:01:12.770
If I'm in the workspace directory in the terminal,

00:01:12.769 --> 00:01:16.234
I start the app by running 'python worldbank.py'.

00:01:16.234 --> 00:01:22.719
I'm going to open a terminal and run 'python worldbank.py'.

00:01:22.719 --> 00:01:28.879
This init file is run and imports the app variable as well as the routes file.

00:01:28.879 --> 00:01:31.289
If you're not following the logic of all this,

00:01:31.290 --> 00:01:33.160
don't worry about it too much.

00:01:33.159 --> 00:01:36.484
You don't need to understand all of this to build the app itself.

00:01:36.484 --> 00:01:39.250
The actual code you'll need to change is in

00:01:39.250 --> 00:01:43.079
routes.py and the files in the template folder.

00:01:43.079 --> 00:01:47.765
The routes.py and template folders are where the magic happens.

00:01:47.765 --> 00:01:50.935
These are the files and folders you'll actually be working with.

00:01:50.935 --> 00:01:55.150
In routes.py, I'm importing this app variable at the top.

00:01:55.150 --> 00:01:59.415
Then, I'm importing the render template method from the Flask library.

00:01:59.415 --> 00:02:01.565
Render template, as you'll see,

00:02:01.564 --> 00:02:07.034
is going to specify what HTML file should show up based on a Web address.

00:02:07.034 --> 00:02:09.199
This first chunk of code says,

00:02:09.199 --> 00:02:14.344
that if the user goes to the homepage like www.udacity.com

00:02:14.344 --> 00:02:19.955
or www.udacity.com/index or whatever your Webpage is called,

00:02:19.955 --> 00:02:23.430
then the index.html should render.

00:02:23.430 --> 00:02:25.314
The second example says,

00:02:25.314 --> 00:02:27.365
if I go to the Webpage name,

00:02:27.365 --> 00:02:31.430
and then type /project-one,

00:02:31.430 --> 00:02:35.930
then the project_one.html file should render.

00:02:35.930 --> 00:02:39.795
These HTML files are in the templates folder.

00:02:39.794 --> 00:02:44.414
So, again you specify the Web address in @app.route,

00:02:44.414 --> 00:02:48.995
then you specify the html file to serve in the render template method.

00:02:48.995 --> 00:02:52.039
The functions like index and

00:02:52.039 --> 00:02:55.969
project underscore one functions can be named whatever you want.

00:02:55.969 --> 00:03:01.025
Your own computer can create a local backend server while you develop an app.

00:03:01.025 --> 00:03:04.010
So, likewise, in the classroom you can spin

00:03:04.009 --> 00:03:07.289
up a backend server to see how your Web app renders.

00:03:07.289 --> 00:03:10.840
You just need to know what website to put into your browser.

00:03:10.840 --> 00:03:15.729
Actually, I already started the Web app when I typed 'python worldbank.py'.

00:03:15.729 --> 00:03:20.709
So, I'm going to shut down the Web app first by hitting Control-C.

00:03:20.710 --> 00:03:22.865
Okay. So, first you need to know

00:03:22.865 --> 00:03:26.439
what website to put into your browser in order to see your website.

00:03:26.439 --> 00:03:30.395
For the classroom, what you'll have to do is type env,

00:03:30.395 --> 00:03:34.534
then the pipe, grep WORK.

00:03:34.534 --> 00:03:39.365
The env command shows all the environmental variables of the workspace.

00:03:39.365 --> 00:03:44.129
What the env pipeline grep WORK command does,

00:03:44.129 --> 00:03:46.849
is filter out the environmental variables for

00:03:46.849 --> 00:03:49.814
the ones that have worked in the name of the variable.

00:03:49.814 --> 00:03:53.810
The Web address is going to be this workspace ID followed

00:03:53.810 --> 00:03:58.235
by dash 3001 a dot and then the workspace domain.

00:03:58.235 --> 00:04:00.740
I'll put instructions below the video as well.

00:04:00.740 --> 00:04:05.975
Now, when you execute the worldbank.py file, you'll start the server.

00:04:05.974 --> 00:04:09.164
Then, type 'python worldbank.py'.

00:04:09.164 --> 00:04:12.984
Now, it says the server is running on port 3,001.

00:04:12.985 --> 00:04:17.855
Now, putting the correct Web address in a browser, you can see the app.

00:04:17.855 --> 00:04:21.925
Here's the app. This is the index.html page.

00:04:21.925 --> 00:04:24.259
Now, if I put in project-one,

00:04:24.259 --> 00:04:28.644
I can see the project_one.html page.

00:04:28.644 --> 00:04:30.625
Going back to the workspace,

00:04:30.625 --> 00:04:33.889
I'm going to open these templates and you can see that

00:04:33.889 --> 00:04:37.414
they're just HTML and this was the HTML being rendered.

00:04:37.415 --> 00:04:40.335
In fact, you can change the HTML.

00:04:40.334 --> 00:04:43.799
Everything will automatically be saved in the workspace.

00:04:43.800 --> 00:04:48.875
Now, you can see if you refresh the Web page with your Web app,

00:04:48.875 --> 00:04:52.305
than the HTML automatically updated.

00:04:52.305 --> 00:04:54.949
Next, you'll do an exercise to expand

00:04:54.949 --> 00:04:58.800
this Web app and get used to all of the routes and templates.

