WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.089
就像 Python 拥有使 Python 开发更容易的库一样

00:00:05.089 --> 00:00:08.039
也有基于 CSS 和 JavaScript

00:00:08.039 --> 00:00:10.989
使 Web 开发更容易的库

00:00:10.990 --> 00:00:12.820
从课程这一部分开始

00:00:12.820 --> 00:00:14.675
你只需要编写 HTML

00:00:14.675 --> 00:00:17.214
Python 还有一点 JavaScript

00:00:17.214 --> 00:00:18.675
但在幕后

00:00:18.675 --> 00:00:23.024
库将为你处理 CSS 和大多数 JavaScript

00:00:23.024 --> 00:00:25.570
首先提醒一下你的目标

00:00:25.570 --> 00:00:28.495
你要完成一个看起来像这样的前端

00:00:28.495 --> 00:00:34.579
这个视频中 我将构建此前端 帮助你了解如何去做

00:00:34.579 --> 00:00:37.600
然后你可以在练习中自己实践

00:00:37.600 --> 00:00:39.375
在这个视频中

00:00:39.375 --> 00:00:43.225
我只会使用图片作为可视化内容

00:00:43.225 --> 00:00:47.524
而不是你将在本课后面构建的 HTML 可视化

00:00:47.524 --> 00:00:49.254
要构建这个前端

00:00:49.255 --> 00:00:51.304
我使用 Bootstrap 库

00:00:51.304 --> 00:00:53.750
这是 Bootstrap 主页

00:00:53.750 --> 00:00:56.634
Bootstrap 的文档非常好

00:00:56.634 --> 00:00:58.225
有很多例子

00:00:58.225 --> 00:01:00.175
每个例子都带有代码

00:01:00.174 --> 00:01:03.859
通常 你只需在网站上复制粘贴示例代码

00:01:03.859 --> 00:01:07.590
然后根据自己需求修改内容

00:01:07.590 --> 00:01:09.920
这正是我即将操作的

00:01:09.920 --> 00:01:11.450
回到他们的主页

00:01:11.450 --> 00:01:13.960
我要点击 Get started 按钮

00:01:13.959 --> 00:01:16.119
在这个页面上

00:01:16.120 --> 00:01:20.765
实际上有一个可供复制粘贴的入门模板

00:01:20.765 --> 00:01:23.150
这正是我要在这里做的操作

00:01:23.150 --> 00:01:27.005
我要复制并粘贴入门代码模板

00:01:27.004 --> 00:01:29.209
目前为止 看起来内容并不多

00:01:29.209 --> 00:01:31.099
只是写了 Hello, world!

00:01:31.099 --> 00:01:34.074
不过让我解释一下 所有这些代码的意思

00:01:34.075 --> 00:01:38.890
首先 有一个我们之前讨论过的 doctype 标签

00:01:38.890 --> 00:01:41.540
然后是 html 标签

00:01:41.540 --> 00:01:44.250
在这个示例中 指定了网站的语言是英语

00:01:44.250 --> 00:01:50.079
在 head 标签中 有一些 meta 和 link 标签

00:01:50.079 --> 00:01:56.000
第一个 meta 标签只是通知浏览器字符集是 utf-8

00:01:56.000 --> 00:01:59.944
然后 viewport meta 标签是用来设置

00:01:59.944 --> 00:02:05.500
根据网络设备缩小和放大内容

00:02:05.500 --> 00:02:09.875
然后有一个指向 Bootstrap CSS 库的链接

00:02:09.875 --> 00:02:11.849
然后页面标题是 Hello, world!

00:02:11.849 --> 00:02:15.750
然后是 body 标签以及大部分的 HTML 内容

00:02:15.750 --> 00:02:20.175
然后是指向所有 JavaScript 脚本的链接

00:02:20.175 --> 00:02:23.990
本质上是链接到 jQuery

00:02:23.990 --> 00:02:28.159
Bootstrap 使用 jQuery 来完成一些动画

00:02:28.159 --> 00:02:32.449
使用 Bootstrap 的基本技巧

00:02:32.449 --> 00:02:36.729
就是将屏幕划分为不可见的行和 12 列

00:02:36.729 --> 00:02:39.185
你可以拥有任意数量的行

00:02:39.185 --> 00:02:44.229
在幕后 Bootstrap 使用 CSS 进行布局

00:02:44.229 --> 00:02:48.269
你需要做的就是指定 id 和 class

00:02:48.270 --> 00:02:53.625
所有这些都在 Bootstrap 文档中有明确说明

00:02:53.625 --> 00:02:59.129
我将快速展示一些示例 看看这些行和列的外在表现

00:02:59.129 --> 00:03:01.340
删除这里的 Hello, world!

00:03:01.340 --> 00:03:07.310
然后添加一个 div 并将其设置为 class="row"

00:03:07.310 --> 00:03:09.194
然后关闭 div

00:03:09.194 --> 00:03:11.424
在这个 row 中

00:03:11.425 --> 00:03:17.960
我要创建一个名为 col-1 的列

00:03:17.960 --> 00:03:20.270
然后关闭这个标签

00:03:20.270 --> 00:03:23.370
在这里只写一个 C1

00:03:23.370 --> 00:03:25.700
那么这里就显示出了这个列 (column) C1

00:03:25.699 --> 00:03:30.375
复制粘贴 制作 12 个列

00:03:30.375 --> 00:03:33.590
希望这样可以清楚地表明

00:03:33.590 --> 00:03:36.969
这一行被划分为 12 个均匀间隔的部分

00:03:36.969 --> 00:03:38.460
现在再制作一行

00:03:38.460 --> 00:03:40.520
只需要再次复制这些

00:03:40.520 --> 00:03:45.420
现在有第二行了 也是 12 个均匀间隔的列

00:03:45.419 --> 00:03:48.559
这样你就有 12 个 div 可以使用了

00:03:48.560 --> 00:03:50.455
不过你也不用全部都划分为 12 个

00:03:50.455 --> 00:03:56.480
比如 第一个可以设置为 4 下一个是 8

00:03:56.479 --> 00:03:58.939
然后删除其他

00:03:58.939 --> 00:04:02.300
那么现在这行就变成了有一列

00:04:02.300 --> 00:04:05.665
占 4 个空位 另一列占 8 个空位

00:04:05.664 --> 00:04:08.139
对于下一行 再举个例子

00:04:08.139 --> 00:04:11.464
给第一列 7  第二列 5

00:04:11.465 --> 00:04:14.280
相加仍然等于 12

00:04:14.280 --> 00:04:16.910
你可以在右边看到

00:04:16.910 --> 00:04:20.689
第一部分有 7 个空位 第二部分有 5 个空位

00:04:20.689 --> 00:04:26.550
你可以使用这些 row 和 col 以任何你需要的方式划分屏幕

00:04:26.550 --> 00:04:28.949
返回看我的 Web 应用

00:04:28.949 --> 00:04:32.729
你应该可以看出 我是如何划分的

00:04:32.730 --> 00:04:37.550
底部的部分就是一个大的行

00:04:37.550 --> 00:04:41.345
然后我将该行分成了

00:04:41.345 --> 00:04:45.545
一个宽度为 1 的列以及另一个宽度为 11 的列

00:04:45.545 --> 00:04:52.663
然后我在后一列创建了另一行 其中划分为两列

00:04:52.663 --> 00:04:56.379
然后又创建了一行 也有两列

00:04:56.379 --> 00:04:59.379
我来展示一下如何使用代码

00:04:59.379 --> 00:05:02.000
不过 我们从顶部开始构建

00:05:02.000 --> 00:05:05.889
也就是导航栏的位置 然后再向下继续工作

00:05:05.889 --> 00:05:08.930
现在回到 Bootstrap 主页

00:05:08.930 --> 00:05:10.930
点击文档

00:05:10.930 --> 00:05:13.819
然后在这里 我只需要搜索导航栏

00:05:13.819 --> 00:05:19.115
这个页面上 有很多关于如何制作导航栏的例子

00:05:19.115 --> 00:05:22.620
我所做的就是 看到了这个 觉得很喜欢

00:05:22.620 --> 00:05:24.425
就复制了这段代码

00:05:24.425 --> 00:05:28.085
然后我将其粘贴到我的 HTML 中

00:05:28.084 --> 00:05:30.349
我要删除所有底部的东西

00:05:30.350 --> 00:05:33.160
为了更容易看到正在做的事情

00:05:33.160 --> 00:05:39.310
我要将网站标题更改为 Data Dashboard

00:05:39.310 --> 00:05:45.165
这个导航栏与我的 Web 应用中的导航栏非常相似

00:05:45.165 --> 00:05:46.980
只是颜色有点不同

00:05:46.980 --> 00:05:48.530
链接有点不同

00:05:48.529 --> 00:05:51.619
所以我所要做的就是修改这些东西

00:05:51.620 --> 00:05:53.769
假设说要修改颜色

00:05:53.769 --> 00:05:57.879
这里显示了 navbar-light 类名

00:05:57.879 --> 00:06:00.279
我将其修改为 navbar-dark

00:06:00.279 --> 00:06:03.739
这个 bg-light 代表浅色背景

00:06:03.740 --> 00:06:05.764
我要修改为深色背景

00:06:05.764 --> 00:06:09.784
这样看起来更像我的网页了

00:06:09.785 --> 00:06:12.485
那么我要如何知道 需要修改哪些类呢?

00:06:12.485 --> 00:06:14.150
嗯 都在文档里

00:06:14.149 --> 00:06:16.519
文档中展示了 你可以修改

00:06:16.519 --> 00:06:21.844
导航栏颜色 你也可以使用这些不同的类修改导航栏背景

00:06:21.845 --> 00:06:27.890
这里我修改为 World Bank Data Dashboard

00:06:27.889 --> 00:06:31.014
然后还需要修改这里的链接

00:06:31.014 --> 00:06:35.784
链接实际上在这个 HTML 列表中

00:06:35.785 --> 00:06:41.670
我想设置的第一个 是优达学城网站的链接

00:06:41.670 --> 00:06:47.840
所以我需要将 href 修改为 udacity.com

00:06:47.839 --> 00:06:51.899
然后这里有一个 span 元素 我实际上并不想要

00:06:51.899 --> 00:06:55.444
所以删除它 这样我们有第一个链接了

00:06:55.444 --> 00:07:01.154
你是否也注意到此列表中的 class ="nav-item active"？

00:07:01.154 --> 00:07:03.059
我不是特别想要这个效果

00:07:03.060 --> 00:07:06.449
删除之后去掉了原来的白色高亮显示

00:07:06.449 --> 00:07:11.759
现在 我想链接到世界银行数据

00:07:11.759 --> 00:07:14.539
设置好了 现在这个 pricing 和 disabled

00:07:14.540 --> 00:07:16.625
我们实际上没有用到 所以可以删除

00:07:16.625 --> 00:07:18.745
这里删除 pricing

00:07:18.745 --> 00:07:21.660
这里删除 disabled

00:07:21.660 --> 00:07:24.140
看起来很不错

00:07:24.139 --> 00:07:25.550
我要放大一点

00:07:25.550 --> 00:07:30.634
因为之前是移动视图 这才是桌面视图

00:07:30.634 --> 00:07:33.435
实际上还有一点不同

00:07:33.435 --> 00:07:36.980
我的应用中 这些是右对齐的

00:07:36.980 --> 00:07:39.129
而这里实际上是左对齐的

00:07:39.129 --> 00:07:40.844
那么怎样才能改变呢?

00:07:40.845 --> 00:07:43.000
如果在文档中查找

00:07:43.000 --> 00:07:47.464
会发现只需要添加一个外边距 ml-auto (ml 是指 maigin left)

00:07:47.464 --> 00:07:48.799
就可以改变了

00:07:48.800 --> 00:07:51.254
所以 我将这个类添加到代码中

00:07:51.254 --> 00:07:54.079
你可以看到它改变了对齐方式

00:07:54.079 --> 00:07:57.919
再次强调 这个库的伟大之处在于

00:07:57.920 --> 00:08:01.759
你只需要修改所有标签中的 class 和 id

00:08:01.759 --> 00:08:04.430
CSS 就会对应更改

00:08:04.430 --> 00:08:06.970
我们回到应用

00:08:06.970 --> 00:08:13.355
就像我之前说过的 这里的底部将列和行嵌套在一起

00:08:13.355 --> 00:08:17.569
我个人喜欢先将行列的结构写出来

00:08:17.569 --> 00:08:21.730
然后再填充内容 不过这不是必须的要求

00:08:21.730 --> 00:08:23.515
你可以一点一点地构建

00:08:23.514 --> 00:08:25.224
这是我完成的步骤

00:08:25.225 --> 00:08:32.300
在这里 我知道我想要一切都在一行中

00:08:32.299 --> 00:08:34.129
然后 在这一行中

00:08:34.129 --> 00:08:38.240
有一个宽度为 1 的列

00:08:38.240 --> 00:08:44.639
以及另一个宽度为 11 的列 填充剩下的空间

00:08:44.789 --> 00:08:49.259
回顾一下仪表板 这样不错

00:08:49.259 --> 00:08:50.870
我们现在可以做到这一点

00:08:50.870 --> 00:08:56.565
这部分上面有一行 然后下面是另一行

00:08:56.565 --> 00:08:59.380
并且每个行都有两列 那么我们把这些放进去

00:08:59.379 --> 00:09:04.985
我们可以添加一行和另一行

00:09:04.985 --> 00:09:07.565
然后在这一行内

00:09:07.565 --> 00:09:13.075
我要放两个宽度为 6 的列

00:09:13.075 --> 00:09:16.565
然后就可以复制粘贴

00:09:16.565 --> 00:09:20.150
所以这就是底部的基础骨架

00:09:20.149 --> 00:09:23.044
现在只是填充内容的问题了

00:09:23.044 --> 00:09:25.434
对于这个左侧边栏

00:09:25.434 --> 00:09:29.134
我要添加 LinkedIn 和 GitHub 的链接

00:09:29.134 --> 00:09:31.965
这里的 href 是指向哪里

00:09:31.965 --> 00:09:35.435
假设你会添加一个自己的 LinkedIn 个人资料页链接

00:09:35.434 --> 00:09:40.764
在左侧可以看到的 assets 资源文件夹中

00:09:40.764 --> 00:09:42.985
我放了一些图片

00:09:42.985 --> 00:09:46.284
我要把这些图片放到网页上

00:09:46.284 --> 00:09:52.375
指定 alt 标记然后关闭链接

00:09:52.375 --> 00:09:54.465
现在放入 GitHub

00:09:54.465 --> 00:09:59.310
你可以在 href 属性中放入指向 GitHub 个人资料的链接

00:09:59.309 --> 00:10:04.219
这些图片非常大 还紧挨在一起

00:10:04.220 --> 00:10:06.970
这并不是我在 Web 应用中的显示方式

00:10:06.970 --> 00:10:09.065
在文档中

00:10:09.065 --> 00:10:12.710
你会看到有一个名为 img-fluid 的类

00:10:12.710 --> 00:10:16.730
可以使这些图片缩小并以更好的方式扩展

00:10:16.730 --> 00:10:18.904
所以我将在这里添加该类

00:10:18.904 --> 00:10:23.870
现在可以看到这些图片随着网页的大小而放大和缩小

00:10:23.870 --> 00:10:27.259
我还要添加一些其他设置

00:10:27.259 --> 00:10:29.629
比如在右侧放置一个边框

00:10:29.629 --> 00:10:33.830
我可以添加一个 border-right 类

00:10:33.830 --> 00:10:35.395
这里出现了

00:10:35.394 --> 00:10:37.274
网站稍微大一点时

00:10:37.274 --> 00:10:39.584
你可以更容易看到它

00:10:39.585 --> 00:10:44.269
我要在上面添加一个额外的 div

00:10:44.269 --> 00:10:48.610
添加一个名为 mt-3 的类

00:10:48.610 --> 00:10:51.180
mt 表示 margin top 外边距顶部

00:10:51.179 --> 00:10:57.625
而 -3 表示我想给外边距增加 3

00:10:57.625 --> 00:11:01.274
我们来看看它是什么样的 越来越好了

00:11:01.274 --> 00:11:06.019
我还在这些图片之间添加了一点空间

00:11:06.019 --> 00:11:10.875
在这些图片的左边添加了一点外边距 来加一下

00:11:10.875 --> 00:11:16.365
在这里 我为这张 GitHub 图标添加了一点上边距

00:11:16.365 --> 00:11:19.039
然后要添加一点左边距

00:11:19.039 --> 00:11:23.179
然后进入 LinkedIn 类

00:11:23.179 --> 00:11:29.589
也添加一点左边距

00:11:29.590 --> 00:11:31.670
看起来好多了

00:11:31.669 --> 00:11:34.069
我们再看一次 Web 应用

00:11:34.070 --> 00:11:36.930
在这里有这些标题

00:11:36.929 --> 00:11:40.474
World Bank Data Dashboard: Top 10 World Economies Land Use

00:11:40.475 --> 00:11:43.040
然后有这四个可视化

00:11:43.039 --> 00:11:44.579
我们来完成它

00:11:44.580 --> 00:11:47.905
这是在 col-11 的列中

00:11:47.904 --> 00:11:49.605
在最顶端

00:11:49.605 --> 00:11:53.745
我要添加一个 h2 标题

00:11:53.745 --> 00:11:59.835
设置为 World Bank Data Dashboard

00:11:59.835 --> 00:12:04.285
然后在它下面有一个 h4 标题

00:12:04.284 --> 00:12:12.164
设置为 Top 10 World Economies Land Use 然后关闭标签

00:12:12.164 --> 00:12:15.814
现在看起来有点不同 因为我把它变成了灰色

00:12:15.815 --> 00:12:17.255
再次到文档中查找

00:12:17.254 --> 00:12:20.225
其中介绍了改变颜色你需要用的类

00:12:20.225 --> 00:12:24.889
在这个示例中 我使用的类名是 text-muted

00:12:24.889 --> 00:12:27.365
看起来很好 比较接近了

00:12:27.365 --> 00:12:29.769
现在只需要在每个部分填充对应的可视化图表

00:12:29.769 --> 00:12:33.004
现在只需要在每个部分填充对应的可视化图表

00:12:33.004 --> 00:12:36.929
这里我指定图片应该是 img-fluid 的

00:12:36.929 --> 00:12:40.164
然后指定实际的图片

00:12:40.164 --> 00:12:42.610
看看怎么样

00:12:42.610 --> 00:12:46.750
现在 我只需要复制粘贴这些代码

00:12:46.750 --> 00:12:51.549
放入下一列 将图片名称修改为 plot2

00:12:51.549 --> 00:12:57.669
然后添加下一个图片 修改为 plot3

00:12:57.669 --> 00:13:00.459
然后就要复制最后的图片了

00:13:00.460 --> 00:13:06.389
将其修改为 plot4 就是这样了

00:13:06.389 --> 00:13:12.254
现在 我们看到的内容与此处的 Web 应用非常相似

00:13:12.254 --> 00:13:16.639
这就是我为这个 Web 应用构建前端的方式

00:13:16.639 --> 00:13:21.218
唯一剩下的就是放入真正的 HTML

00:13:21.219 --> 00:13:25.365
JavaScript 可视化而不仅仅是使用图片

00:13:25.365 --> 00:13:28.659
你会用 Plotly 库来做到这一点

00:13:28.659 --> 00:13:31.745
但在进入 Plotly 库的学习之前

00:13:31.745 --> 00:13:35.200
需要先完成 Bootstrap 的练习

