WEBVTT
Kind: captions
Language: zh-CN

00:00:02.750 --> 00:00:06.750
我很喜欢 SageMaker 的一点是

00:00:06.750 --> 00:00:08.970
其中有很多内置算法

00:00:08.970 --> 00:00:11.130
有一个非常庞大的 GitHub 代码库

00:00:11.130 --> 00:00:15.030
其中有步骤演示 Jupyter Notebook

00:00:15.029 --> 00:00:16.890
以及一些示例数据

00:00:16.890 --> 00:00:20.760
并且演示了如何训练和部署每个算法

00:00:20.760 --> 00:00:23.880
你能解释下 除了参考文档之外

00:00:23.879 --> 00:00:27.855
创建这么庞大的代码库的初衷是什么吗？

00:00:27.855 --> 00:00:32.770
好的创建代码库的推动因素是

00:00:33.649 --> 00:00:38.504
我们的使命是让每一位开发人员都能使用机器学习技术

00:00:38.505 --> 00:00:43.730
这就是我们的使命为了完成这一使命

00:00:43.729 --> 00:00:49.199
我们打算重新规划围绕机器学习开发技术的方式

00:00:49.200 --> 00:00:52.720
我们将结构分成了三层

00:00:52.719 --> 00:00:53.990
在最底层

00:00:53.990 --> 00:00:59.480
我们提供了机器学习和深度学习框架

00:00:59.479 --> 00:01:00.889
包括 TensorFlow

00:01:00.890 --> 00:01:02.329
MXNet Phython

00:01:02.329 --> 00:01:05.780
以及所有其他的精彩机器学习编程语言

00:01:05.780 --> 00:01:08.540
深度学习开发人员 数据科学家

00:01:08.540 --> 00:01:12.180
和研究科学家非常熟悉这些语言

00:01:12.180 --> 00:01:16.185
他们能够轻松地尝试这些语言

00:01:16.185 --> 00:01:17.400
但这并不适合所有人

00:01:17.400 --> 00:01:18.840
如果你完全知道如何操作

00:01:18.840 --> 00:01:23.100
会使用 GPU 和重新编译 GPU 库

00:01:23.099 --> 00:01:25.084
那么在这一层级就如鱼得水

00:01:25.084 --> 00:01:30.280
在中间层级有很多自动化工具

00:01:30.280 --> 00:01:33.349
可以帮助构建 训练和部署机器学习算法

00:01:33.349 --> 00:01:36.140
SageMaker 就属于这样的层级

00:01:36.140 --> 00:01:37.670
在最顶层

00:01:37.670 --> 00:01:41.090
有很多计算机视觉等技术的应用服务

00:01:41.090 --> 00:01:45.185
但是我们现在讨论的是 SageMaker 所以重点谈谈 SageMaker

00:01:45.185 --> 00:01:51.155
自动化整个流程并不够

00:01:51.155 --> 00:01:53.899
如果只是自动化这些流程 工作并没有完成

00:01:53.899 --> 00:01:56.150
因为还有些人

00:01:56.150 --> 00:01:59.465
并非很熟悉机器学习算法

00:01:59.465 --> 00:02:04.159
所以我们决定加入最热门 最常见

00:02:04.159 --> 00:02:08.659
最有用的机器学习算法

00:02:08.659 --> 00:02:13.884
包括如今赢得各种比赛的机器学习算法

00:02:13.884 --> 00:02:16.289
一些计算机视觉算法

00:02:16.289 --> 00:02:18.599
主成分分析 K 均值

00:02:18.599 --> 00:02:20.579
k 最近邻 线性回归

00:02:20.580 --> 00:02:23.400
逻辑回归 多类别分类算法

00:02:23.400 --> 00:02:25.724
如果你研究过机器学习

00:02:25.724 --> 00:02:27.469
应该就熟悉这些名称

00:02:27.469 --> 00:02:33.104
我们迎接挑战 针对大型数据集

00:02:33.104 --> 00:02:35.114
优化这些算法

00:02:35.115 --> 00:02:40.900
并将它们内置到 Amazon SageMaker 中

00:02:40.900 --> 00:02:43.310
另一方面

00:02:43.310 --> 00:02:46.189
我们询问 Amazon 内部团队

00:02:46.189 --> 00:02:51.319
“你们目前正在研发的是哪些精彩算法？”

00:02:51.319 --> 00:02:54.590
我们根据这些反馈开发了 BlazingText

00:02:54.590 --> 00:02:59.205
BlazingText 是 Word2vec 的优化版本

00:02:59.205 --> 00:03:02.535
并在 Amazon 内部构建字词嵌入

00:03:02.534 --> 00:03:04.169
例如产品 广告内容

00:03:04.169 --> 00:03:07.155
用户评论等嵌入

00:03:07.155 --> 00:03:12.060
我们根据内部团队的反馈创建相关工具 并将工具内置到 SageMaker 中

00:03:12.060 --> 00:03:15.903
当我们不仅会打造平台和服务

00:03:15.903 --> 00:03:20.019
而且向开发人员提供算法时

00:03:20.020 --> 00:03:22.760
很自然地

00:03:22.759 --> 00:03:25.759
就需要围绕这些算法提供示例

00:03:25.759 --> 00:03:31.370
使大家能够很快上手使用这些算法

00:03:31.370 --> 00:03:36.240
所以我们决定提供大量算法示例

00:03:36.240 --> 00:03:38.980
但是大家变得很激动

00:03:38.979 --> 00:03:41.479
开始贡献更多示例

00:03:41.479 --> 00:03:42.949
最终获得了

00:03:42.949 --> 00:03:45.379
超过 30 个示例

00:03:45.379 --> 00:03:49.055
现在的 Jupyter Notebook 比一开始的开源项目多了很多

00:03:49.055 --> 00:03:51.240
并且内置到了 SageMaker 中

00:03:51.240 --> 00:03:53.990
我们希望

00:03:53.990 --> 00:03:57.905
数据科学家/开发人员在决定使用 SageMaker 时

00:03:57.905 --> 00:04:00.250
能够立即使用该平台

00:04:00.250 --> 00:04:03.289
不仅仅可以访问基础工具以及自动化工具

00:04:03.289 --> 00:04:05.060
而且可以查看示例

00:04:05.060 --> 00:04:11.780
了解如何从头到尾地构建 训练

00:04:11.780 --> 00:04:14.563
部署 托管和优化机器学习模型

00:04:14.563 --> 00:04:19.069
我们希望提供所有的资源 包括示例数据

00:04:19.069 --> 00:04:20.719
这就是我们的初衷

00:04:20.720 --> 00:04:25.330
一开始只是很小的项目 但是随着人们的贡献 变得越来越庞大

00:04:25.329 --> 00:04:27.740
并且我们还请外部客户

00:04:27.740 --> 00:04:30.610
在 GitHub 代码库中贡献代码

00:04:30.610 --> 00:04:35.060
这个生态系统发展的越来越庞大

00:04:35.060 --> 00:04:37.254
我对此感到很骄傲

00:04:37.254 --> 00:04:39.180
是的是很强大的资源

00:04:39.180 --> 00:04:40.694
我认为

00:04:40.694 --> 00:04:43.019
尤其对 Jupyter Notebook 的使用

00:04:43.019 --> 00:04:46.625
与优达学城的教育方式很像

00:04:46.625 --> 00:04:49.639
如何让学员能访问这些资源

00:04:49.639 --> 00:04:52.550
打造一种学习环境

00:04:52.550 --> 00:04:54.290
使学员能够专注于

00:04:54.290 --> 00:04:56.080
他们要解决的机器学习问题

00:04:56.079 --> 00:04:59.120
包括数据和算法问题

00:04:59.120 --> 00:05:02.340
减少无关的信息

00:05:02.339 --> 00:05:05.750
让学员能够探索和尝试这些问题

00:05:05.750 --> 00:05:07.834
我认为这些很有用

00:05:07.834 --> 00:05:10.159
是的实践是最好的学习途径

00:05:10.160 --> 00:05:13.620
在学完 K 均值

00:05:13.620 --> 00:05:18.074
或 k 最近邻等算法之后

00:05:18.074 --> 00:05:22.170
如果能够快速应用算法

00:05:22.170 --> 00:05:27.390
例如在 10-15 分钟之后跟着说明操作 就会牢牢记住这些知识

00:05:27.389 --> 00:05:32.819
最终能够在网络中部署这些算法

00:05:32.819 --> 00:05:34.469
并使用产品

00:05:34.470 --> 00:05:38.240
我认为利用示例

00:05:38.240 --> 00:05:42.110
指导学习者很重要

00:05:42.110 --> 00:05:46.110
我们发现这些工具的应用势头很强

