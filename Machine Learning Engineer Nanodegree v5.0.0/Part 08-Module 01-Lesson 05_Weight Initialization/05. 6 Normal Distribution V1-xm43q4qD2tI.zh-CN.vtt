WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.740
现在我将介绍如何使用

00:00:01.740 --> 00:00:05.135
正态分布选择初始模型权重

00:00:05.135 --> 00:00:09.645
首先 我将使用 NumPy 和直方图进行可视化

00:00:09.645 --> 00:00:12.835
这次我将使用np.random.normal

00:00:12.835 --> 00:00:15.210
此函数接受的是

00:00:15.210 --> 00:00:17.905
均值和标准差

00:00:17.905 --> 00:00:20.505
而不像均匀分布那样接受上下限

00:00:20.505 --> 00:00:24.275
如果均值和标准差没有指定 就像这里一样

00:00:24.275 --> 00:00:27.420
则默认情况下 均值是 0 标准差是 1

00:00:27.420 --> 00:00:30.840
这里表示创建 1000 个值 其中均值为 0

00:00:30.840 --> 00:00:32.695
标准差为 1

00:00:32.695 --> 00:00:36.885
均值是指所有这些值的平均值

00:00:36.885 --> 00:00:41.040
标准差表示值在均值周围的分散程度

00:00:41.040 --> 00:00:43.805
此图显示了均值为 0

00:00:43.805 --> 00:00:46.460
标准差为 1 的正态分布的分布效果

00:00:46.460 --> 00:00:49.735
大多数值在此范围内比较集中

00:00:49.735 --> 00:00:51.535
我们使用的是直方图

00:00:51.535 --> 00:00:54.865
因此将 1000 个值分成了 500 个区间

00:00:54.865 --> 00:00:59.230
在均匀分布中 值在范围内提前均匀地分布

00:00:59.230 --> 00:01:01.680
一个区间大约有两个值

00:01:01.680 --> 00:01:06.360
而在正态分布中 大多数值都靠近均值 0

00:01:06.360 --> 00:01:09.680
直方图本身看起来像一条曲线

00:01:09.680 --> 00:01:12.655
表示值在均值的一个标准差内如何分布

00:01:12.655 --> 00:01:17.060
如果我们从这种分布里选择初始模型权重值

00:01:17.060 --> 00:01:19.430
那么所选的随机值通常比从均匀分布里选择的值

00:01:19.430 --> 00:01:22.505
更加接近 0

00:01:22.505 --> 00:01:23.980
一开始选择很小的权重值

00:01:23.980 --> 00:01:26.640
可能会带来一些好处

00:01:26.640 --> 00:01:29.570
这部分我将布置成练习

00:01:29.570 --> 00:01:32.550
因为你已经见过很多权重初始化示例

00:01:32.550 --> 00:01:35.930
因此我将要求你定义一个初始化函数

00:01:35.930 --> 00:01:37.820
然后通过从正态分布里取样

00:01:37.820 --> 00:01:40.565
初始化每个层级的权重

00:01:40.565 --> 00:01:43.660
分布应该依然遵守一般法则

00:01:43.660 --> 00:01:46.730
均值为 0 标准差等于 1/√n￣

00:01:46.730 --> 00:01:50.300
完成这个函数后

00:01:50.300 --> 00:01:52.490
请比较几个模型

00:01:52.490 --> 00:01:57.055
比较均匀初始化权重和正态初始化权重

00:01:57.055 --> 00:01:59.790
最后创建第三个模型

00:01:59.790 --> 00:02:02.705
它没有明确的权重初始化方式

00:02:02.705 --> 00:02:05.045
看看这三个模型的比较结果

00:02:05.045 --> 00:02:07.600
接下来我将演示我的实现代码

