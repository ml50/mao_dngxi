WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.714
下面说说我是如何计算解释的方差的

00:00:02.714 --> 00:00:05.219
首先 我需要知道

00:00:05.219 --> 00:00:07.589
对于前几位的成分 应该查看哪些 s 值

00:00:07.589 --> 00:00:09.480
它们在传入的

00:00:09.480 --> 00:00:11.440
DataFame 中是倒序的

00:00:11.439 --> 00:00:13.814
例如 对于前三个成分

00:00:13.814 --> 00:00:17.399
我需要查看传入的 DataFrame 中的最后三个值

00:00:17.399 --> 00:00:20.279
这个索引等于 N-COMPONENTS (33)

00:00:20.280 --> 00:00:23.835
减去这里传入的 n_ top_components

00:00:23.835 --> 00:00:28.019
33 - 3 = 30

00:00:28.019 --> 00:00:31.629
还可以反向遍历 s 的每行

00:00:31.629 --> 00:00:33.449
这只是一种方式

00:00:33.450 --> 00:00:36.000
为了计算解释的近似方差

00:00:36.000 --> 00:00:37.979
我将使用上面的这个方程

00:00:37.979 --> 00:00:41.414
这个方程专门计算前五个成分

00:00:41.414 --> 00:00:45.094
但是我希望延伸到任何数量的 n_top_components

00:00:45.094 --> 00:00:47.899
为了计算前 n 个成分的平方

00:00:47.899 --> 00:00:50.710
并获得从 start_index 到结束的值

00:00:50.710 --> 00:00:53.054
我用 np.square() 对它们求平分

00:00:53.054 --> 00:00:54.679
并求和

00:00:54.679 --> 00:00:59.479
然后除以整个 SRA 的平方和

00:00:59.479 --> 00:01:03.140
这样会返回一个在索引 0 处存储值的结果

00:01:03.140 --> 00:01:05.140
在这里返回这个值

00:01:05.140 --> 00:01:08.825
在这里调用刚刚创建的 explained_variance 函数

00:01:08.825 --> 00:01:13.655
传入上面的 DataFrame s 和前几个成分的数量

00:01:13.655 --> 00:01:17.844
我只是想查看最高成分解释的方差

00:01:17.844 --> 00:01:20.298
对于最高的主成分

00:01:20.299 --> 00:01:23.785
解释的方差约为 32%

00:01:23.784 --> 00:01:26.899
我的目标是寻找能解释约 80% 的

00:01:26.900 --> 00:01:29.960
数据方差的前 n 个成分

00:01:29.959 --> 00:01:34.929
我将通过试错法并从有根据地推测开始

00:01:34.930 --> 00:01:38.630
我知道当前数据在这里列出了 34 个特征

00:01:38.629 --> 00:01:42.890
这个特征列表来自 scaled_counties DataFrame

00:01:42.890 --> 00:01:46.775
但是我怀疑有很多特征是相关的或多余的

00:01:46.775 --> 00:01:50.285
实际上 肉眼就可以看出大的类别

00:01:50.284 --> 00:01:52.939
可以看到关于总人口

00:01:52.939 --> 00:01:54.769
性别和种族

00:01:54.769 --> 00:01:56.839
以及收入水平

00:01:56.840 --> 00:02:00.590
职业 交通方式和就业类型的详情

00:02:00.590 --> 00:02:02.930
我猜测合适的前几个成分数量

00:02:02.930 --> 00:02:05.510
应该约为 7 或 8 个

00:02:05.510 --> 00:02:07.700
测试下

00:02:07.700 --> 00:02:10.460
可以看到前七个成分解释的方差

00:02:10.460 --> 00:02:13.420
约为 80%

00:02:13.419 --> 00:02:15.949
看看还能少一个吗

00:02:15.949 --> 00:02:21.439
前六个解释的方差约为 76% 或 77%

00:02:21.439 --> 00:02:23.824
所以需要保留前七个

00:02:23.824 --> 00:02:28.539
现在我们知道前七个成分涵盖了约 80% 的数据方差

00:02:28.539 --> 00:02:32.514
我记下这个数字并在后面创建新的训练数据时使用它

00:02:32.514 --> 00:02:35.959
你可能会疑问 这七个成分是由哪些特征组成的？

00:02:35.960 --> 00:02:38.719
什么样的特征线性组合

00:02:38.719 --> 00:02:42.305
使这些成分对描述数据的分散性如此有影响？

00:02:42.305 --> 00:02:47.849
接下来 我将介绍如何查看前几个成分的组成

