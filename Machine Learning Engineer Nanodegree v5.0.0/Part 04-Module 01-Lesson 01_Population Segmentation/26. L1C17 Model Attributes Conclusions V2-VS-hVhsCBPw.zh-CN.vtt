WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.750
要真正地详细了解郡县是如何分组成聚类的

00:00:03.750 --> 00:00:06.705
我们需要查看训练过的 k 均值模型的属性

00:00:06.705 --> 00:00:08.144
为了获得这些属性

00:00:08.144 --> 00:00:11.384
首先需要知道模型存储在 S3 上的什么位置

00:00:11.384 --> 00:00:13.029
可以通过名称检索

00:00:13.029 --> 00:00:15.599
保存位置由输出路径确定

00:00:15.599 --> 00:00:17.655
输出路径由 prefix

00:00:17.655 --> 00:00:19.260
K 均值作业名称

00:00:19.260 --> 00:00:23.085
以及扩展 output/model.tar.gz 组成

00:00:23.085 --> 00:00:25.769
我从在上面调用 fit 的部分复制了该作业名称

00:00:25.769 --> 00:00:29.280
不过也可以在 AWS 训练作业控制台中找到该名称

00:00:29.280 --> 00:00:32.280
然后下载并解压缩模型文件

00:00:32.280 --> 00:00:34.365
保存为 model_algo-1

00:00:34.365 --> 00:00:36.710
与 PCA 模型一样

00:00:36.710 --> 00:00:42.770
使用 mxnet 库加载这些模型数据并加载为数组

00:00:42.770 --> 00:00:44.435
输出这些值

00:00:44.435 --> 00:00:48.739
可以看出 这次 k 均值只有一组模型参数

00:00:48.738 --> 00:00:51.079
并且没有相关的名称

00:00:51.079 --> 00:00:53.809
这些值其实是聚类形心

00:00:53.810 --> 00:00:58.025
表示 k 均值模型中每个聚类的位置

00:00:58.024 --> 00:01:02.500
位置在 PCA 模型空间里是一个 7 维数据点

00:01:02.500 --> 00:01:05.629
因为我们向此模型里传入的训练数据就是 7 维的

00:01:05.629 --> 00:01:06.829
在下个单元格中

00:01:06.829 --> 00:01:09.754
从模型属性数组中获取这些形心

00:01:09.754 --> 00:01:13.894
可以看到 这里有 8 个聚类以及 7 个成分

00:01:13.894 --> 00:01:17.899
这是聚类 0 在成分空间里的位置

00:01:17.900 --> 00:01:22.460
但是单看这个表格 很难判断数据之间的关系

00:01:22.459 --> 00:01:24.619
我们可以看看哪些值最高

00:01:24.620 --> 00:01:27.234
哪些值最低

00:01:27.234 --> 00:01:29.329
不过还有另一种可视化方法

00:01:29.329 --> 00:01:32.170
我们不能在普通的空间里可视化 7 维数据

00:01:32.170 --> 00:01:34.879
但是可以通过热图的形式查看

00:01:34.879 --> 00:01:38.449
X 轴表示从 0 到 7 的聚类标签

00:01:38.450 --> 00:01:42.295
Y 轴表示从 c1 到 c7 的成分

00:01:42.295 --> 00:01:44.719
这个热图可以告诉我

00:01:44.719 --> 00:01:48.019
哪些权重在定义聚类方面最重要

00:01:48.019 --> 00:01:50.674
聚类 2 比较突出

00:01:50.674 --> 00:01:52.250
可以看到这个聚类

00:01:52.250 --> 00:01:55.010
对应了很高的 c1 值

00:01:55.010 --> 00:01:58.310
如果你忘记这些成分到底对应什么

00:01:58.310 --> 00:02:01.504
可以使用上面的 display_component 函数

00:02:01.504 --> 00:02:03.319
它的参数包括 DataFrame V

00:02:03.319 --> 00:02:04.504
特征列表

00:02:04.504 --> 00:02:05.929
以及成分编号

00:02:05.930 --> 00:02:08.094
再看看第一个成分的组成

00:02:08.094 --> 00:02:12.229
这个图显示了组成成分 1 的人口统计学特征

00:02:12.229 --> 00:02:14.239
再回到这个热图上

00:02:14.240 --> 00:02:18.230
现在可以更清晰地知道聚类 2 是由哪些特征定义的

00:02:18.229 --> 00:02:20.829
成分 4 看起来也比较有意思

00:02:20.830 --> 00:02:23.485
它对应的聚类 2 的值很低

00:02:23.485 --> 00:02:26.735
但是对应的聚类 0 和聚类 7 的值很高

00:02:26.735 --> 00:02:28.415
我们看看这个成分

00:02:28.414 --> 00:02:31.609
我们可以通过查看成分组成图和这个热图

00:02:31.610 --> 00:02:34.895
判断出每个聚类的组成

00:02:34.895 --> 00:02:38.314
但是这与实际郡县数据有何关系？

00:02:38.314 --> 00:02:40.655
你可能会疑问 哪些郡县聚类到一起

00:02:40.655 --> 00:02:43.280
并且最为相似

00:02:43.280 --> 00:02:47.030
我们可以将聚类标签映射到每个数据点（每个郡县）

00:02:47.030 --> 00:02:50.659
看看哪些郡县分组到同一个聚类中

00:02:50.659 --> 00:02:54.984
我在这里向 counties_transformed DataFrame 添加了标签列

00:02:54.985 --> 00:02:59.555
我可以排序 并查看在聚类 0 里有哪些郡县

00:02:59.555 --> 00:03:02.060
查看前几个数据点就能看到

00:03:02.060 --> 00:03:04.569
聚类 0 里的各种郡县

00:03:04.569 --> 00:03:06.664
可以看到乔治亚州 路易斯安那州

00:03:06.664 --> 00:03:10.000
佛罗里达州和弗吉尼亚州的数据点

00:03:10.000 --> 00:03:12.875
一次也可以仅查看一个聚类

00:03:12.875 --> 00:03:15.870
将标签设为我感兴趣的聚类编号即可

00:03:15.870 --> 00:03:19.895
我也可以查看聚类 1 里的所有郡县

00:03:19.895 --> 00:03:23.375
这些数据依然按照原来的字母顺序排序

00:03:23.375 --> 00:03:25.939
有意思的是 这些郡县具有相似性

00:03:25.939 --> 00:03:29.479
可以从主成分中判断出来

00:03:29.479 --> 00:03:32.090
虽然它们位于不同的州

00:03:32.090 --> 00:03:34.625
这就是这个 notebook 的最终分析结果

00:03:34.625 --> 00:03:37.729
你已经成功地完成了人口细分任务

00:03:37.729 --> 00:03:40.969
此类信息经常用于

00:03:40.969 --> 00:03:43.939
制定本地化的营销活动

00:03:43.939 --> 00:03:47.509
旨在根据人口相似性定位到不同的区域

00:03:47.509 --> 00:03:51.549
建议你尝试下这个 notebook 的可视化图表

00:03:51.550 --> 00:03:53.260
最后一步

00:03:53.259 --> 00:03:55.579
如果你已经完全操作完毕

00:03:55.580 --> 00:03:58.370
建议继续完成资源清理步骤

00:03:58.370 --> 00:04:00.935
我在这里提供了相关文档的链接

00:04:00.935 --> 00:04:02.495
为了完成彻底的清理步骤

00:04:02.495 --> 00:04:05.995
你需要转到主 Amazon SageMaker 控制台

00:04:05.995 --> 00:04:07.965
点击“Endpoint”

00:04:07.965 --> 00:04:12.710
“End point configurations”以及“Models”然后从控制台里手动删除资源

00:04:12.710 --> 00:04:17.090
还可以转到 S3 并删除 S3 存储桶里的所有资源

00:04:17.089 --> 00:04:18.984
建议养成良好习惯

00:04:18.985 --> 00:04:21.230
现在 运用你在这节课所学的知识

00:04:21.230 --> 00:04:24.170
你可以解决任何非监督式任务了

00:04:24.170 --> 00:04:26.360
接下来我们将总结所学的知识

00:04:26.360 --> 00:04:29.400
然后继续学习监督式学习

