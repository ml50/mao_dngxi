WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.205
删除不完整的数据

00:00:02.205 --> 00:00:03.780
并查看了结果后

00:00:03.779 --> 00:00:05.939
下面你的任务是归一化数据

00:00:05.940 --> 00:00:08.790
在上面查看了 clean_counties_df 后

00:00:08.789 --> 00:00:12.134
可以看到 特征范围很大

00:00:12.134 --> 00:00:15.585
某些列的值很大 范围很宽

00:00:15.585 --> 00:00:17.820
其他列具有百分比值

00:00:17.820 --> 00:00:22.589
因为非监督式学习需要查看特征之间的关系

00:00:22.589 --> 00:00:25.304
所以我要将这些特征变得可比较

00:00:25.304 --> 00:00:27.030
实际上 我要将

00:00:27.030 --> 00:00:30.810
所有这些数值特征的范围变成 0-1

00:00:30.809 --> 00:00:35.539
首先调用 sklearn.preprocessing 库

00:00:35.539 --> 00:00:38.104
导入 MinMaxScaler

00:00:38.104 --> 00:00:40.070
我可以创建一个 scalar 对象

00:00:40.070 --> 00:00:44.359
它能够查看特征范围内的最小值和最大值

00:00:44.359 --> 00:00:49.280
并使每个值除以该范围 获得 0-1 之间的标准化值

00:00:49.280 --> 00:00:51.515
我创建了一个 scalar

00:00:51.515 --> 00:00:54.070
然后 为了获得 counties_scaled DataFrame

00:00:54.070 --> 00:00:58.715
我将调用 fit_transform 传入浮点型 clean_counties_df

00:00:58.715 --> 00:01:00.830
并应用 MinMaxScaler

00:01:00.829 --> 00:01:03.125
这是一个很常见的归一化步骤

00:01:03.125 --> 00:01:06.859
scaled DataFrame 的特征和索引

00:01:06.859 --> 00:01:08.969
要与 clean_counties_df 的一样

00:01:08.969 --> 00:01:11.179
我们希望列为特征

00:01:11.180 --> 00:01:14.215
索引为 State-County 索引

00:01:14.215 --> 00:01:16.520
看看结果 可以看到

00:01:16.519 --> 00:01:19.609
所有这些数值都位于小数范围内

00:01:19.609 --> 00:01:24.480
还可以进一步检查最大值和最小值是否符合预期

00:01:24.480 --> 00:01:26.689
通过对 DataFrame 调用 .describe

00:01:26.689 --> 00:01:29.569
可以看到最小值和最大值等统计量

00:01:29.569 --> 00:01:34.009
的确所有数值列的最小值和最大值都分别是0 和 1

00:01:34.010 --> 00:01:35.329
我们清理了数据

00:01:35.329 --> 00:01:37.310
删除了类别列

00:01:37.310 --> 00:01:38.875
并且缩放了范围

00:01:38.875 --> 00:01:41.870
下面差不多可以将输入传入 PCA 模型

00:01:41.870 --> 00:01:45.515
并降维以供后续分析使用

00:01:45.515 --> 00:01:48.930
下面我们将详细了解 PCA

