WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.265
你已经尝试过 SageMaker 的超参数优化功能

00:00:05.265 --> 00:00:07.275
下面看看我的实现方法

00:00:07.275 --> 00:00:09.015
正如我之前提到的

00:00:09.015 --> 00:00:13.110
前三步与我们完成的其他迷你项目一样

00:00:13.110 --> 00:00:15.045
我已经执行了这些单元格

00:00:15.045 --> 00:00:17.310
从第 4 步开始

00:00:17.310 --> 00:00:18.780
第一步是

00:00:18.780 --> 00:00:24.210
将数据集拆分成验证集和训练集

00:00:24.210 --> 00:00:27.855
然后将这些数据集保存到 Notebook 实例中

00:00:27.855 --> 00:00:31.875
将数据集保存到本地 Notebook 实例中后

00:00:31.875 --> 00:00:33.705
使用 upload_data 方法

00:00:33.705 --> 00:00:36.825
将这些数据集上传到 S3

00:00:36.825 --> 00:00:41.100
然后像在其他迷你项目中一样

00:00:41.100 --> 00:00:47.014
首先获取关于当前 Notebook 实例的信息

00:00:47.014 --> 00:00:49.465
包括当前的角色

00:00:49.465 --> 00:00:51.475
以及容器的名称

00:00:51.475 --> 00:00:55.115
该容器特定于我们当前所在的区域

00:00:55.115 --> 00:00:56.990
像之前的 Notebook 一样

00:00:56.990 --> 00:00:58.010
首先

00:00:58.010 --> 00:01:00.505
创建一个 estimator 对象

00:01:00.505 --> 00:01:02.540
我像之前的 XGBoost

00:01:02.540 --> 00:01:07.420
Sentiment Analysis Notebook 一样创建了一个 estimator 对象

00:01:07.420 --> 00:01:12.475
此外 我使用了和上次一样的超参数

00:01:12.475 --> 00:01:16.790
包括将 objective 设为 binary:logistic

00:01:16.790 --> 00:01:19.220
我们已经创建了 estimator 对象

00:01:19.220 --> 00:01:23.024
它将作为 SageMaker 超参数优化作业的

00:01:23.024 --> 00:01:27.945
基本模型

00:01:27.945 --> 00:01:30.905
下面我们需要设置 HyperparameterTuner 对象

00:01:30.905 --> 00:01:32.525
就像在上个视频中讨论的那样

00:01:32.525 --> 00:01:34.940
首先指定 estimator 对象

00:01:34.940 --> 00:01:37.360
它将是基准模型

00:01:37.360 --> 00:01:41.450
然后指定要优化的指标

00:01:41.450 --> 00:01:43.640
我们将使用

00:01:43.640 --> 00:01:45.715
验证集的 RMSE

00:01:45.715 --> 00:01:48.460
然后指定什么样的模型更好

00:01:48.460 --> 00:01:52.300
即更小的 RMSE 值

00:01:52.300 --> 00:01:57.335
接着指定模型总数

00:01:57.335 --> 00:01:58.970
我设成了 6

00:01:58.970 --> 00:02:03.500
因为每个训练作业都比 Boston Housing 示例的运行时间更长

00:02:03.500 --> 00:02:05.540
我不想等太久

00:02:05.540 --> 00:02:10.135
接着指定并行运行的模型数量

00:02:10.135 --> 00:02:15.310
最后 指定各个参数的范围

00:02:15.310 --> 00:02:18.695
创建好 HyperparameterTuner 对象后

00:02:18.695 --> 00:02:21.590
要求 SageMaker 训练它

00:02:21.590 --> 00:02:24.565
正如之前讨论的 所有这些都在后台运行

00:02:24.565 --> 00:02:28.070
所以等待运行完毕

