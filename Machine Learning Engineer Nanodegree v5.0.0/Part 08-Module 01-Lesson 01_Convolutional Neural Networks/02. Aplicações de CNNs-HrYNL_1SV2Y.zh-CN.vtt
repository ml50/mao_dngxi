WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.160
CNN 在各种领域都取得了前沿性成果

00:00:03.160 --> 00:00:06.969
包括语音用户界面

00:00:06.969 --> 00:00:10.118
自然语言处理和计算机视觉

00:00:10.118 --> 00:00:12.775
在语音用户界面领域

00:00:12.775 --> 00:00:14.710
Google 在最近推出的 WaveNet 模型中

00:00:14.710 --> 00:00:18.820
使用了 CNN 我们在下方提供了该模型的链接

00:00:18.820 --> 00:00:22.210
WaveNet 可以获取任何文本输入

00:00:22.210 --> 00:00:28.370
并返回由计算机生成的朗读语音 处理效果很棒

00:00:28.370 --> 00:00:33.875
真正比较酷的是如果你向该算法提供大量你的语音样本

00:00:33.875 --> 00:00:37.243
有可能会将它训练的和你的声音一模一样

00:00:37.243 --> 00:00:40.030
对于自然语言处理领域

00:00:40.030 --> 00:00:43.030
稍后你会发现循环神经网络

00:00:43.030 --> 00:00:46.835
比卷积神经网络使用的更频繁

00:00:46.835 --> 00:00:50.840
但是 CNN 也可以用在此领域

00:00:50.840 --> 00:00:53.409
我们在下方提供了一个链接

00:00:53.408 --> 00:00:57.079
演示了 CNN 可以如何用于从句子中提取信息

00:00:57.079 --> 00:00:59.914
该信息可以用来分类情感

00:00:59.914 --> 00:01:03.283
例如 作者开心还是忧伤？

00:01:03.283 --> 00:01:04.730
如果谈论的是一部电影

00:01:04.730 --> 00:01:06.719
他们喜欢还是讨厌这部电影？

00:01:06.718 --> 00:01:11.078
在这节课 我们将侧重于应用和计算机视觉

00:01:11.078 --> 00:01:16.043
尤其是将 CNN 用到图片分类任务上

00:01:16.045 --> 00:01:18.939
对于给定的图片 CNN 可以分配相应的标签

00:01:18.938 --> 00:01:24.183
用来总结图片中的内容

00:01:24.185 --> 00:01:26.980
这是计算机视觉的核心问题

00:01:26.980 --> 00:01:30.375
在多种问题领域都有应用

00:01:30.375 --> 00:01:33.280
例如 CNN 可以用来

00:01:33.280 --> 00:01:38.105
指导人工智能代理玩视频游戏 例如 Atari Breakout

00:01:38.105 --> 00:01:41.530
基于 CNN 的模型能够学习玩游戏

00:01:41.530 --> 00:01:45.534
不用提前了解什么是球这类知识

00:01:45.534 --> 00:01:49.768
甚至不用知道各个控件是干什么的

00:01:49.768 --> 00:01:52.790
代理只会看到屏幕和得分

00:01:52.790 --> 00:01:57.819
但是的确可以访问人类用户会访问的所有控件

00:01:57.819 --> 00:01:59.664
借助这些有限的信息

00:01:59.664 --> 00:02:06.129
CNN 可以提取关键信息 使它们能够制定有用的策略

00:02:06.129 --> 00:02:09.860
CNN 甚至被训练来玩看图说词游戏

00:02:09.860 --> 00:02:12.669
目前有一款游戏 叫做 Quickdraw

00:02:12.669 --> 00:02:15.969
它可以根据你用手指画出的图片猜测你画的是什么

00:02:15.967 --> 00:02:20.822
CNN 的应用几乎是无限的

00:02:20.824 --> 00:02:22.060
例如 围棋游戏

00:02:22.060 --> 00:02:27.729
被视为到目前为止最复杂的游戏之一

00:02:27.729 --> 00:02:30.294
据说游戏中的配置数量比

00:02:30.294 --> 00:02:34.594
宇宙中的原子数量还多

00:02:34.592 --> 00:02:39.217
最近 Google DeepMind 部门的研究人员使用 CNN

00:02:39.217 --> 00:02:44.687
训练了一个人工智能代理并打败了专业围棋手

00:02:44.687 --> 00:02:49.524
CNN 还让无人机能够行驶在不熟悉的领域

00:02:49.525 --> 00:02:54.215
无人机现在可以用来向偏远地区运输医疗物资

00:02:54.215 --> 00:02:56.590
CNN 使无人机能够

00:02:56.590 --> 00:03:00.580
查看或判断流式传输视频数据中的情况

00:03:00.580 --> 00:03:05.514
但现在我们将研究的是能够解码文本图片的算法

00:03:05.514 --> 00:03:09.474
或许你想将古老的图书或手写笔记数字化

00:03:09.473 --> 00:03:12.519
然后你可以开发一种算法

00:03:12.520 --> 00:03:16.770
该算法能够识别字母、数字或符号图片

00:03:16.770 --> 00:03:19.449
类似地 你可以开发一种算法来帮助

00:03:19.449 --> 00:03:23.185
无人驾驶汽车阅读路标

00:03:23.185 --> 00:03:27.430
Google 通过训练算法阅读街景图片中的门牌号

00:03:27.430 --> 00:03:32.968
构建了更准确的全球街道地图

00:03:32.967 --> 00:03:37.977
CNN 在所有这些问题领域都取得了先进的成果

00:03:37.979 --> 00:03:40.539
我们之前提到 虽然可以使用

00:03:40.538 --> 00:03:44.570
前几课介绍的神经网络来进行图片分类

00:03:44.572 --> 00:03:46.270
但是你几乎始终可以

00:03:46.270 --> 00:03:49.659
通过 CNN 获得更好的结果

00:03:49.657 --> 00:03:51.382
在接下来的几个视频中

00:03:51.383 --> 00:03:54.000
我们将研究为何是这种情况

