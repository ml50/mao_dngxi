WEBVTT
Kind: captions
Language: pt-BR

00:00:00.266 --> 00:00:03.002
Após analisar e normalizar
os dados de imagem,

00:00:03.036 --> 00:00:04.503
vamos criar uma rede neural

00:00:04.537 --> 00:00:07.006
que descubra os padrões
nos dados de treinamento.

00:00:07.040 --> 00:00:08.140
Após o treinamento,

00:00:08.173 --> 00:00:12.178
a rede deve ser capaz de ver
novos dados nos quais não treinou

00:00:12.212 --> 00:00:14.814
e classificar os dígitos
contidos nestas imagens.

00:00:14.848 --> 00:00:18.784
Estes dados não vistos anteriormente
são os dados de teste.

00:00:18.818 --> 00:00:21.287
A esta altura, as imagens
foram convertidas

00:00:21.321 --> 00:00:24.256
em vetores com 784 entradas.

00:00:24.290 --> 00:00:28.627
Então a primeira camada de input
na MLP deve ter 784 nós.

00:00:28.661 --> 00:00:30.896
Também queremos
que a camada de output

00:00:30.930 --> 00:00:33.366
distinga entre 10 tipos
diferentes de dígitos:

00:00:33.400 --> 00:00:34.700
de 0 a 9.

00:00:34.734 --> 00:00:37.203
A última camada
deve ter 10 nós.

00:00:37.237 --> 00:00:39.939
O modelo pega uma imagem
que foi achatada

00:00:39.973 --> 00:00:41.807
e produz 10 valores
de output,

00:00:41.841 --> 00:00:44.443
um para cada possível classe,
de 0 a 9.

00:00:44.477 --> 00:00:47.747
Estes valores de output
se chamam "pontuação de classe".

00:00:47.781 --> 00:00:51.050
Uma pontuação alta indica
que uma rede está muito certa

00:00:51.084 --> 00:00:53.886
de que uma imagem se encaixa
em uma certa categoria.

00:00:53.920 --> 00:00:55.888
Veja que a pontuação
de classe

00:00:55.922 --> 00:00:57.857
para um 3 desenhado à mão

00:00:57.891 --> 00:01:00.092
terá pontuação maior
para a classe 3

00:01:00.126 --> 00:01:03.496
e pontuação menor
para as classes 0, 1 e 2.

00:01:03.530 --> 00:01:06.632
Mas também pode ter
uma pequena pontuação para um 8

00:01:06.666 --> 00:01:10.236
ou qualquer outra classe similar
em formato com um 3.

00:01:10.270 --> 00:01:12.238
Pontuações de classe
são representadas

00:01:12.272 --> 00:01:15.174
como um vetor de valores
ou um gráfico de barras,

00:01:15.208 --> 00:01:17.376
indicando os pontos fortes
da pontuação.

00:01:17.410 --> 00:01:21.314
A parte da arquitetura da MLP
que você tem que definir

00:01:21.348 --> 00:01:24.517
está entre as camadas de input
e as de output.

00:01:24.551 --> 00:01:26.719
Quantas camadas ocultas
você quer incluir

00:01:26.753 --> 00:01:28.954
e quantos nós
deve ter em cada uma?

00:01:28.988 --> 00:01:30.990
Você verá muito esta pergunta

00:01:31.024 --> 00:01:34.193
enquanto define redes neurais
para várias tarefas.

00:01:34.227 --> 00:01:38.064
Eu costumo procurar pesquisas
ou trabalhos relacionados

00:01:38.098 --> 00:01:39.732
que possam agir
como um bom guia.

00:01:39.766 --> 00:01:43.135
Neste caso, vou buscar
"MLP para MNIST".

00:01:43.169 --> 00:01:47.106
Ou mais geral, MLP para classificar
imagens em escala de cinza.

00:01:47.140 --> 00:01:50.176
Agora vou pedir
que você faça uma busca assim

00:01:50.210 --> 00:01:53.212
para tentar achar um bom jeito
de começar a definir

00:01:53.246 --> 00:01:56.633
as camadas ocultas de uma MLP
para classificação de imagem.

