WEBVTT
Kind: captions
Language: zh-CN

00:00:04.429 --> 00:00:09.059
重构代码时 除了使其变得整洁和模块化

00:00:09.060 --> 00:00:13.170
提高代码效率也非常重要

00:00:13.169 --> 00:00:19.490
使代码高效有两个部分 减少运行所需时间

00:00:19.489 --> 00:00:23.640
以及减少占用的内存空间

00:00:23.640 --> 00:00:28.559
两者都会对公司或产品性能产生重大影响

00:00:28.559 --> 00:00:30.975
因此 实践这一点非常重要

00:00:30.975 --> 00:00:36.100
如果你是在生产环境中工作 这一点尤为重要

00:00:36.100 --> 00:00:40.189
但是应该指出的是

00:00:40.189 --> 00:00:44.344
提高效率的重要性取决于具体情况

00:00:44.344 --> 00:00:50.054
慢速代码 可能在一种情况下可行而在另一种情况下不可行

00:00:50.054 --> 00:00:54.269
例如 一些批量数据准备过程

00:00:54.270 --> 00:00:57.680
可能不需要立即优化

00:00:57.679 --> 00:01:01.369
如果每三天运行一次 每次持续几分钟

00:01:01.369 --> 00:01:03.125
另一方面

00:01:03.125 --> 00:01:09.829
用于生成要在社交媒体上显示帖子的代码需要相对较快

00:01:09.829 --> 00:01:13.054
因为更新会立即发生

00:01:13.055 --> 00:01:17.000
同样 你可能会花很多时间重构

00:01:17.000 --> 00:01:21.519
在代码功能完成之后 对其优化并整理

00:01:21.519 --> 00:01:24.409
重要的是要了解这对你的工作

00:01:24.409 --> 00:01:28.390
以及作为开发人员的你自己 都是很有价值的

00:01:28.390 --> 00:01:30.950
每次优化代码时

00:01:30.950 --> 00:01:33.560
你都会获得新的知识和技能

00:01:33.560 --> 00:01:36.885
逐渐成为一个更高效的编程人员

00:01:36.885 --> 00:01:40.370
让我们看一些低效代码的例子

00:01:40.370 --> 00:01:44.680
练习重构 优化其性能

